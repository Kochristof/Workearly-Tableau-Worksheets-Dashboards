<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Tableau - Final Assignment)' inline='true' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau - Final Assignment' name='excel-direct.1g8e7rc0e1x9r514sztnb0k1iwdc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/k.christoforidis/OneDrive - PROTASIS S.A/Desktop/Personal/Seminars etc/Workearly/Tableau/Tableau - Final Assignment.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1g8e7rc0e1x9r514sztnb0k1iwdc' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEL_RGR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Count-Orders' datatype='integer' name='[Calculation_1628332806050349060]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Order ID])' />
      </column>
      <column caption='Average-Discount' datatype='real' name='[Calculation_1628332806050623493]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Discount])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_F068414249BB4EEFB541AEE9D6D655A0]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/KB5D6~1.CHR/AppData/Local/Temp/TableauTemp/#TableauTemp_03mj2561oau8uz18jzudi0m06bss.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='04/08/2025 10:52:16 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country/Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country/Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country/Region</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEL_RGR' />
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Orders_F068414249BB4EEFB541AEE9D6D655A0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Greece&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_F068414249BB4EEFB541AEE9D6D655A0'>
            <properties context=''>
              <relation connection='excel-direct.1g8e7rc0e1x9r514sztnb0k1iwdc' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Bubble Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1k0ihy80o3e1na0zqapa60xr7d3h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]' />
              <size column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A7CACFA1-A4E3-4C1A-A16D-1E313C3C514B}' />
    </worksheet>
    <worksheet name='Double Bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Average Discount and Number of Orders per Sub-Category</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1k0ihy80o3e1na0zqapa60xr7d3h'>
            <column caption='Count-Orders' datatype='integer' name='[Calculation_1628332806050349060]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Order ID])' />
            </column>
            <column caption='Average-Discount' datatype='real' name='[Calculation_1628332806050623493]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([Discount])' />
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1628332806050349060]' derivation='User' name='[usr:Calculation_1628332806050349060:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1628332806050623493]' derivation='User' name='[usr:Calculation_1628332806050623493:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050349060:qk]' palette='blue_teal_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050349060:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050349060:qk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050349060:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Sub-Category:nk]</rows>
        <cols>([federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050349060:qk] + [federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk])</cols>
      </table>
      <simple-id uuid='{76001D46-C435-465E-B04C-F74D49956428}' />
    </worksheet>
    <worksheet name='Horizontal Bars'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1k0ihy80o3e1na0zqapa60xr7d3h'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Category:nk] / [federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Sub-Category:nk])</rows>
        <cols>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{C25EA0EB-CF22-4276-B904-30EE88F89B52}' />
    </worksheet>
    <worksheet name='Line Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1k0ihy80o3e1na0zqapa60xr7d3h'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Max' name='[max:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Min' name='[min:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Los Angeles&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;New York City&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Philadelphia&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;San Francisco&quot;' />
                  <groupfilter function='member' level='[none:City:nk]' member='&quot;Seattle&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[max:Sales:qk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[min:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]</rows>
        <cols>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[tyr:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{1B11BAB1-0031-4448-B37A-5A5E6A217401}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1k0ihy80o3e1na0zqapa60xr7d3h'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='239' />
            <format attr='text-format' field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Profit:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk]' />
              <wedge-size column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Profit:qk]' />
              <size column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Profit:qk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk]' />
              <text column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9FFE532C-6CC2-4657-9175-033E5DF1FBE9}' />
    </worksheet>
    <worksheet name='Vertical Bars'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Tableau - Final Assignment)' name='federated.1k0ihy80o3e1na0zqapa60xr7d3h' />
          </datasources>
          <datasource-dependencies datasource='federated.1k0ihy80o3e1na0zqapa60xr7d3h'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Attribute' name='[attr:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='Attribute' name='[attr:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='Attribute' name='[attr:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='82' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Segment:nk]' />
              <tooltip column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]' />
              <tooltip column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[attr:Category:nk]' />
              <tooltip column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[attr:Ship Mode:nk]' />
              <tooltip column='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[attr:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]</rows>
        <cols>([federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Category:nk] / [federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk])</cols>
      </table>
      <simple-id uuid='{BE9197FD-915B-4B7B-A668-5EE10AD4F172}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98082' id='8' param='horz' type-v2='layout-flow' w='99052' x='474' y='959'>
            <zone h='98082' id='6' type-v2='layout-basic' w='99052' x='474' y='959'>
              <zone h='49041' id='3' name='Horizontal Bars' w='49526' x='474' y='959'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49041' id='5' name='Pie Chart' w='18408' x='474' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49041' id='11' name='Bubble Chart' w='25609' x='18882' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49041' id='13' name='Line Chart' w='25616' x='73910' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49041' id='15' name='Vertical Bars' w='29419' x='44491' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49041' id='17' name='Double Bar' w='49526' x='50000' y='959'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98082' id='18' param='vert' type-v2='layout-flow' w='99052' x='474' y='959'>
                <zone fixed-size='280' h='49041' id='3' is-fixed='true' name='Horizontal Bars' w='49526' x='474' y='959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49041' id='17' is-fixed='true' name='Double Bar' w='49526' x='50000' y='959'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49041' id='5' is-fixed='true' name='Pie Chart' w='18408' x='474' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49041' id='11' is-fixed='true' name='Bubble Chart' w='25609' x='18882' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49041' id='15' is-fixed='true' name='Vertical Bars' w='29419' x='44491' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49041' id='13' is-fixed='true' name='Line Chart' w='25616' x='73910' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7830C6AB-6AAE-4FE4-8CF2-AEC71A786B48}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.10417' source-height='32'>
    <window class='worksheet' name='Horizontal Bars'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Category:nk]</field>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{879AA6B5-ECA8-482D-88AE-8EE6C04A59F3}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Profit:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21F13D05-A917-4AAD-9693-36AE3CACCF71}' />
    </window>
    <window class='worksheet' name='Bubble Chart'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FC9B5BF-5B3E-442A-A499-0BCBB09B9E63}' />
    </window>
    <window class='worksheet' name='Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]</field>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B0FCB6F-E24D-4CD7-906B-D94CD0551804}' />
    </window>
    <window class='worksheet' name='Vertical Bars'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='0' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Calculation_1628332806048120833:nk]</field>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Calculation_1628332806048268291:nk]</field>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Category:nk]</field>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{692A0EE7-FD2A-41F5-9BEC-735AE9237842}' />
    </window>
    <window class='worksheet' name='Double Bar'>
      <cards>
        <edge name='left'>
          <strip size='159'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='159'>
            <card pane-specification-id='1' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050349060:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[usr:Calculation_1628332806050623493:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57369B1C-75DD-4FED-A740-107EDC0E01EB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bubble Chart' />
        <viewpoint name='Double Bar' />
        <viewpoint name='Horizontal Bars' />
        <viewpoint name='Line Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:City:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Pie Chart'>
          <highlight field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Ship Mode:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Vertical Bars'>
          <zoom type='entire-view' />
          <highlight field='[federated.1k0ihy80o3e1na0zqapa60xr7d3h].[none:Segment:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{24BB61F3-AE9A-433F-9514-7228797F6304}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bubble Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABBNAAAQTQFnjAHg
      AAAgAElEQVR4nOydd5hU5fn3P+ec6WVntve+C7uAdKUpIiKxxBp71NgTS2KNibG8lphoLLGX
      2KPGLiqKDaQovS1tWWB7b7PT+8w57x+zLCxbKC6SX+B7XVwXe8pznnPmuZ+737egKIrCERzB
      YQrxUE/gCI7gUOIIARzBYY0jBHAEhzWOEMARHNY4QgBHcFjjCAEcwWGNIwRwBIc1jhDAERzW
      OEIAR3BY4wgBHMFhDdWhnsB/C5RgANnhgGgEQW9AsMYjCMKhntYRHGQc1gQgu1yEFs8ntHIp
      0YZ6iIRjJwQBIc6CeuRotLNORiouQRCPMMv/RQiHYzCcEo0S/O4rAp9+gOJ0DH6xIKAefzT6
      S65ESsv4eSZ4BD8bDjsCUEJBvM89QXjV8v26TzCZMf7+j6hHjz1IMzuCQ4HDiq8r4TDeZx7f
      78UPoHjceJ74G5HtFQdhZkdwqHBYEUDwq88Jr1nxEwYI4H3uCWS3a+gmdQSHFIcNAci2Dvyf
      fvDTx2lvJfjFnCGY0RH8N+CwIYDggm/A7x+asRZ+i+L3DclYR3BocVgQgCLLhFYuG7rx3G7C
      WzYN2XhHcOhweBCA14Pc3DikY0a2bh7S8Y7g0OCwIAC5vXXox+xsH/Ixj+Dnx2FBAEooPPSD
      RiJDP+YR/Ow4LAhAMJmGflC9YejHPIKfHYcFAUgpqSBJQztmVs6QjncEhwaHBQGg0aIqLhm6
      8QQBdemooRvvAKEoCkpUjv07vCJahgyHRTSoIAhoZs4mUrFlSMYTs7KRioYNyVgHAkVRcG/a
      Ts3T/8a1dguIAvFTxpH3h8swDcs7ZPP6v4jDJhhOCYVw3X0rckP9Tx7LeONtaKYdPwSzOjDY
      Fq1k49V3EfUFeh1XWcyMe+dxLONHHKKZ/d/D4SECAYJGg+E314LqpzE99dFTUE8+dtBrFEXp
      9W8oEfH6qbjziT6LHyDidFNx52PI4SMWqn3FYcMBdiL4/Tf4Xn0BZHm/7lMUBZLSiRz7S3wN
      rQiiiGnUcCxTx6MyG3ddF4nSMnchTe9+QajLSfwxo8m//iL0WWkHNF9FUYi4vShRGXWcCcfK
      Daw99/eD3jN50dtHRKF9xGGhA0D3Ao5GUU+dgV4B/9uvQqDvLtrvvYA3rKNlRQvBuY/Czj1D
      FDAOK6Dwr7fSsWYr9g3bSBo7nG0PvYDSvQu7Nm3Htmwdkz5+BpXFROei1Tg3bcM8PJ+UWVMR
      VBK+hlZURj2aRGuvNMyI10/lY6/R/Ol85FCYhMljSTxm78p32GYH8vbzCx2e+J/nAIqiENxW
      iWPuN/g3biXqcCBoNKj0ajQBG1pVmMFSf8WkZAJpw6h6az5RX//BdOpEKz6tCU9jOwazjnCX
      s881Jff/Hk9lPfX//qznWNrpJ5B10Wms+e39mIflMW3OU8jhCIIoIhl0bH/oJaqefqvXOPrM
      VKLt7TGq7AeCJDFt5QfoMlL3/nGO4H+bA8heH+3PvIL9o8/7eIODgBfQpCeTOHMiar2E3NEG
      0SiCOQ4pKwf12AlIRSVUn3vDgIsfIGxzkDStiHHP3s3Ks27o95rmT77DuWl7r2OtcxcScnkJ
      O9y4tlZR/sALNM2Zj6hWUXzTpTTP+a7POIF2G8b0FELN/YdiJJ86HW1a8uAf5gh68D9LALI/
      QNNdf8O98IcBd0uAUEsH7V8tJ/vxBzCOH92nEoRn83a85ZV7fZ5nw1YkjQq1NY5QR1ef85Je
      ixLtq3ckTRmLLiMFQRCofWNOj+hU8bd/IfXHmRQYdu+N1D75Bp6K6l6nzKOGMey+PzAoSzuC
      XviftAIpikLnK2/j/n7wxb8T0S4HTff8nWhX3wT5QEMLSjS61zFkfwAlGCLn8rP7LEB9VhrD
      77oOSa/rfZMgEOi0I4gihryMnsUPIEcimEcV93mOsSiHpBMmMfHzFyn9xx2kn38KlqOPApMR
      v83J+qvvpumDr1Aie5/zEYB033333XeoJzHUCNc30nz/Yyih0D7fI7s8CBo1hmPG9eICwZZ2
      2ud8u9f7BbWK1PNOxdtmj+3oooBKqyJxYgmjHriBuGHZ6DJSsK3ahBwMIRn1mIbn0zLvB5wb
      t+GrbcaYl0GwzQaCQMYZJ3DUI7fjq27A39wGgoC5tIAxT/0FfU46klZD3OjhGEsKqX7xPUI2
      BxGXh0BzOx3fLkNtjcM6YeQBfb/DCf+TIpB78TJkt2e/73PNX0zS1Zcg7LZTG0uLUFnMRByD
      5wGrE6xsuOtpdCY12UdnM3xUKUpnGwIywsJ3CC0SSVFriL92IgHRjHH2aVS8PBf7hpheEGiz
      kTLjaLzVjegzUii9+3doUxPJOO9kgg4XokbD8DuvIW7M8F4E2vjOXIKtnb3mokSj1P7rfbJ/
      /Uskg36/v8PhhP9JAvBv2npA94Vb24l0dKLJyeo5pk6KJ+2C02h86d2BbxQEMi8+FaPSiT7Y
      gSC3Qjv0EoSUKAT9qAE1HvjiNbIsKjqtOnyOAMgy9W99DoBney1b/vIkKTMnsfkvT6J0h16v
      ufwvTJnzDKbiXLxVDWgSrfiqG/qdUqjDTtjlPUIAe8H/JAFE97JbDwQlHEH29s71FQSB7Jsu
      x1/fgu3rxbt8ADshiqQdW0JSaDtCZN9FLhSZOH2IqZeOwC5l0NEcpvHDb3pO21ZswF1R3bP4
      AUKddupen4Onrpn2+SuQDDosw3L7HV6TkkDzx9/Q9OE3RDxekmdOpviOq9Emxe/7HA8D/E8S
      gGgy7v2ifiCopF7iz64BRRJOn4Xf7iZc3wjBIAgC+oJsUo9Kw6ru2r/FvxtUapFkoY2A0ltx
      NuZnEe6HkDt/XIurohaAqNePr6UDQ14mvtqmXdPVqJEMOioeeL7nWP2bn+LeVsOkD59C1KgP
      aK77A0VRQI7GFPtoFBS5e/MQYkYCSURQqUAVm8uhqsP6P2kF0pX2tZ7sC1SJCaiSk3odi7i9
      rL38L6y56m5aFq3BafeRc88fmPD9O4y87yritXaEfTE1DQZFITNbIe+MKRjzszAPzydh8hhM
      Rb1zDkSNmrRfzuh1TJeRwqgn/oyxMBvJZECXnc6IR24nZO9LPPYVG7CvOrjJ/Eo0iuz1Ijvs
      yA4HiteDEvCjBIMooRBKKIgSDKD4fMguF7K9C9njjp07BD7Z/0kCMM+Y1v9Ovtf7poIoEezo
      IhqM7ehNn3xHx6JVPaJP2O6i8rl3EcN+ot9+tN8xRQNBRGHYRAtTPnyMQJeTyufepe37VaT9
      cgbmknwsY0oouff6GIEMy0XS6zDkZ2IdWcj6K+/CW9VA1OMj6vGhSbAQ9fRftiXYj49iKKBE
      o8geN7LDjhLw7/t3URQIhZDdLmSn42cnhP+TIlDE7aXh/a/wN7aSNH0iyTOO6VW9WVuYh+W0
      k3B8NHefxxTMJjprOth27EVEnG7U8Rayfn06vjZbn2sDLR0Ev/wAKTDEtYHsnbjf/TfB9tgi
      lcMRAjYn5vGj8FU3UPXUWz3nzCMKGfnXm1h/xZ1E3N6eIcJ2Jzse/he6rLQ+jjJRqyFudCyP
      QVEUgq2d2H5cixwKE3/MURiLcvdbFFEUJba7+7x99aP9RTQaq7qn0SIajT9LRe7/c36AqD/I
      qgtvpf7Nz7Cv3kzTx9+htpiJnzACBAE5FKb+P1/ibnch+b0orr0rxIJWgyOkwbZmK1G3FyUc
      IeLy0LV0HaFOOyGXt9f1CcPSSU8McjCkVrXix+5UEehwooozYcjNwDKqmGBDC+6tuxZ0qMOO
      e8sOAk1tfcYIO90U3XwZjvVbkf3B2EFRJPuyM0meORmVQUfnwpWsveSPNH/4Ne3f/EjT+1+h
      tpix7GFmHQyKoqB4vUNfJCwaRQmFENTqg04E/+eC4drmL2f1Rbf3OqZLT+aE1R8gaTXUvT2X
      slsfAVkh9dhxZOZbcS9aFlPE+oE6IxXtjBlUPPWfAZ9pnX40XWvLkYMh4kYUMuqso9Dbqwe8
      /qdCmHEmLdVeNt/zDBG3F116MoTDhG29PdW65PjuyM897ldJlDx4EyGnF0ktoUSjOMurafp8
      IZJWw9gn7mDH31/CX9/S6z7JqGfyFy8SN6Jor3NUFAWlW3Y/aBAExDhLTFk+SPivFoEURcG7
      ow7b4lXIwRDWiaOIuPo6uCJeP40ffYtteRlhhxvkGE1HIjIZD92Fd8UanJ9/TaCikqjHiwLI
      Wj0p552G9ZxfUv/W4KJSyszJjHr0DiIeH4acNOS3n/ypau+gEBp24G9W9Yg2gZYOdCkJe1wk
      UHDDxVQ+9mqf5Bh9VhpVr3yCe3sduZeejspspHNZWYyzhSNsue855M6+ol3U68e2ZA2iVosh
      NwNR1X8hgdjO7zm4iz/2IGS3K0YEQ1zUYCeGnAAURYFwGMKhXbuuKMbMXRrNPrM0RZap/ucb
      VD/57162cOukMagtJsLOXYRgKsph458eRw6EUJmNpMyajLu8Gsmgo+PH9dS+NY/Rf7uJiNOF
      PjWRNdc9SNuiNRgusZCckoQgDT4nUa3CkJMem5fLQdR5cBTJnZBb6jEXn4AgiShRGUElMeqh
      m+hcvJrWLxYjSCKCRk3nyo3EjRuJq6ycqDcWrarLTGHU43+mq6yC1nlLUBt1hB0u4kryCbR0
      AGAZWYR9cf/vUPnsu2y46xmG3fYbRvzl2n6vUYIBlGDw4Lz8npBlZI87RgQHwVQ6JASgRKPg
      caN43OD3DShuIIooWi2COQ5McQjqge3RbXMXUvXE6z27+U44Vm4gYdp4BJMppgQffzTJJ05m
      +bm3xB6hUVNyx1WsvORPtH+/Evu6rWSeNZMlJ15J2OnBOq40tnt3Z1pFPD7ip4yNEWl/lgtJ
      RF+QjRyJIKpUKB4XRPumHEZlhagiI8sKWpXU748VjETRDrCr9oLPQ9qsY8i/8hwa3/8qpugf
      fzQZZ53IqIdvY8s9T1P7+hz8LT8gSCKjH72d+rc/J+INMO75e7CMKibQ0ILc2kbLG+UgCOiy
      0kieNpaMs08i48yZrDzzejzbano9Vh0fh2F4Pt6WTiIuT8877w4lGkXx/cyFgSMRlIAf4SDU
      YvpJSrASjaJ02aC1CdwuCIUGtwQoSqyimtcLDnuMhep0Ma6wx4KpuOdJ/HUt/Q4TcbqZ9Pnz
      5F99LsnHH40+IwWV2USwo4vCa87DPCyXmtc+6YmuDNtdBJrbQVEINLeTf9WvSBxXgv2H1dQ8
      9zb21ZsRJbGveCUIJM6axrbn3iPi8aOOM6HTKMibVvWZkysQZHuHg1q7C2cgRHl7TMTwhyPU
      2V1UdTlZWtuMQa1iZX0LsqKwor6FsCyTYur7w7Y1hqh64X2iHh/eynoc67eSNH0itpUbqX/n
      C0I79QFFwb2tFtfWGoI2B+5tNejiLWy59e9EHO7YN5cVIg43SjDEsDuuQpMUj9oah7NsKxGP
      DwQBTVI8I/9+K5nnzMK7aRvB2kZaP1tAuMuJeWRRzHnWLfoMuMEdTEQiCBrtkCvFB8YBdsqA
      bS0HXiJQUcDljHGNhCRISOy1a+6poO2OqD9AyGZHZYzFuYTsLjq++xHvlh1svfdpbLOmkH/F
      2bTNX072+SdjX7MFb9WumBn7ijIcy9Yid9v6/Q2tIIpYRg8HWSbYZkPSajBkpWDOTMKfnkDH
      V4uRdBos508fcF6V3YtSVhRUokiDw41WJaGSRDo8PoqTrKglkWHJ8Wxt7yI/wYIr0L8oUfX8
      e0Tcvp5vZVu6jlWX3UnX+grUcbs83SqTAU2SFW+3J9hb00TtC//pebfdEe60U//axzh3NNK5
      bB2aBCslD/wBY34WljHDCdtdrL34tl6WJceqjThWb2L0C/chqlUHX+4fCIoS4wLGoa3yt98c
      QJFlFFsHtLcOjRNIUcDnjeXnGk09FN7+zY8EGvonApVRj3XKeNoXrkSXlsS2h16ibd6SnvPe
      6gYCbTb02Rk4Vm/CW9OEHI4g6jQkHTeBYG19H4sKioIgiRwz51mMmSk4l6wiUFWHZ2MFisOJ
      4HGjNeiwThqDULG2z5xEUSAv3kJufBxWnRYFhUyLCXcwTLrZiFqSyIgzEVUU2j0+xmakEK/X
      Em/QYdhDFFREFVXLmvosYlNxLpJOS8H5J5FUlIY24if/7ONJOnok9g3bUQSB4hsvxrliQ7/G
      AgB/Uzv2TTtQojIRjw99ZhoZZ81Em5LI1jsfx7m2b+0kb1UDxuJcTHkZ/Yp/PxuiUQStbkh1
      gf3iAIqioLS1gmsvnRUPBF4PSlM9ZOYgSBJZl5yBfdn6fkUqw/ACVl15N1Gvn4YPvyHS0dei
      QTRK19J1yN2pkMbCHKZ+8iQIAj9Mu7DfKQQ77bS8/yUNT7+JvOfOHJXpWrCM7X4fxRMMiJHe
      5zWShGY3S0V69y6dERfbsbIs5p5zufFxg34KISkVy+gwnT/sIjRBpSLnpGNQNpUR/O4LFJ+f
      OCD45ZcEBYGCdCPR9GJSjxuH7esl+AfYPLQZybhbbT26lX1dOYtmXcO0j57AsWaAku+KQteP
      a0k9YeKg8z7o2Glg0WqHbMh9FqgURUHpaDs4i38n/H6UpgYUWSbtjJkU3HJ5HxtwyinTybjo
      tB6rh6++BVVcX7YoqFU9ix9iHlK11YzKaEA1QIiwKEm0vPVp38W/G+zLN+Bu9Q54figgFY9k
      1CO3kzBlLJJBhzYpnqwJBQT+8zaBVWtQ9sxPVhQUjwdxRwVdD/6dxNEFIPbdJUWNmrixpRiy
      09AkWjEWZKNJTaTohgvRpSUNmkopSOJP9/QOAZTw0Ipg+y4CuZzwc9TEj4RBjiKYzCRMHUfq
      aceDJKFOsFB8528pvPUKjPnZ+OqaiXh85F99LtkXnkrrl4t6lF5RpyX1tBkEO+1Eur24aTMn
      Yc5OQwmFCLs8uPZIUAewjCoi3NgC/eTu7g6VxYw1bf9jjfYJooTqpHPQ5mST+auTyDrvFJJy
      EpCXLETpR67fE7LLjejoQj9+LN6mjh4TsjrBghhvoW3hasJON6JOgzY9BdvyDSQecxTb/vkm
      SjBM1NmP51wUyf/dBRhz/zv6JA+lGLRPHEAJh2O7/88Fhx18PlAUmj9bSO2bn9H67TI23vYI
      rfMWozIbKPr9xaAoVD3/Hv6mdo557wmMRbmYSgvJvvxsql+fgyYlkaIrziTBqiW4ZClbLvoD
      G069Et/CpejNeoRuk6SgkkiaOZmCGy/Z6+IHCIpmhISUg/LqYl4xQkrM5yBqNKg1Iq5//2e/
      ehzIdjtWbZic6y4i/5bLOerZe5n40TNEInLPLh62u0iZPoHj5j5H57L1dK3YiJQQjz4vs/dg
      AqSfPYvE6YdY/NkJWR5STrRPOoDS2fGzm76UjjYcLS52PP76rh/N4WbT7f8gYeo4Kp+LLXyA
      8gdfQBsfh2dHHQBBm4OEiaPQhPw4Pv4ScQ9lPWJ3ogbixgwj7ZqL6Fy+gYQpYzGVFiJo1Cj+
      wd9Vm52JNOt0Ih++PKQ/hiKpcJkLENduxZCXgSbRivPjz4l29Q132Bv8a9fTtqaWzOsuIf1X
      s5HDEfSZqTGLF4AoEnK4WHPtfUR8fuJGFODeUYsgiljGjUBt0CHqdaSechzp554MQX9M/h5C
      eLxeTMb9zN1QlJ+XAJRQKCb+/NwIBnAsW9PnZcMON97KOoz5u3aqiNtLuHPXIgm22Rh2/YW0
      PPGvQS1V/i3bcf64hpr/fEPDnAWc+OPbxI0dgWP5ugHvEVQSSaccj1g4AnHsFOT1Q9d8zxa0
      svn2Zwg7XGhTEhnz2O34lxzg+LJCYqaZ7U+/g7+5A02ChaP+fgtb7n0Gb00jaadMx1lehX+n
      yVOJ+QoAfBYzE168Bfu6chJPmIykURPdj8hXWZb54NNPGV5UjEGvQ5IkAsEgkiSxet06igoK
      aGtvJyU5mcz0DDxeD6NKS/fj5YaOAPaqAyh2W8y7ewgg+/w0fdV7AYgaNQlTxhHucqIyG0k9
      cTK5F59G29c/7naRgNje3m+Zkz0RbrdhmTGFYGsnnYvXgFZD1NbVq0TJ7kg5/USSz5ody7oq
      LEHpaEHpGgLdqHg0ZW+txN/YFnNcub24NlRg8nUd+M4rSuiPnYq/sY1Qp4O8S09HMuhp/epH
      3FurkcNhQk43amscCRNG4q2JNRLUpsTT8PF3NH0yH29tM5lnnxjbCPfD7C3LMu2dnWzcsgWv
      10c0GmVHVTVHjRxBcUEBCfHxuD0eNmzeTJfdTmlJyT7L9YJOP2QOsUE5gKIoMQ/vIYL1qCJS
      Zk2mfX53d3dBwFRayPrfP4QSiSKoJAr+8yhJ0yfSuWQtTXPmgwA5F55KeOWafXpGpLMLa24a
      TR+3x7zFQOYpx6K0teHdVtVjLpRMBtLOOxV/SOb7Yy8lrqSAY976O5qzLycy7z3kzfv2vP4g
      FJTAcb8kdM8nvY6HOu3ICdEDDrtWaVU0LFiBr9upqDJoaV+woseLHLI7mfz2P9j68CtoEqyo
      4+Mw5magAKGu2O8uB4NEAyGEfqxKA0FRFJwuF8mJicRbrAgC+Px+8vNykWUFr89HTV0deTk5
      mE0mXC73/r3jEIYEDc4BwmGwdQzd0/YTgiiQfu4pxE0YhWX0cIpu+Q3BTgeOsorYBbKCymRA
      n55EpMOGJs5IzqVnUHj9hbS88dGuWPi9IBgFb/2uTpJxY0sY/dz/w93QhrvFRtyksRz14oMk
      zJzChj8+Rtjhxt/cjtoahyBKGE+YRVhWEdyxA0lS9t1CodEiTT8V1UnnIJnNuMorcZdX9ZxO
      /8VUdK6OA+YAuqJ87M5wz4KXAyEiHv+u6FEFgjYn9rXl6DKS8VU3EGzvQglFUMWZ0CVZ8Wyv
      pXXeD8SPHoY20bJPzxUEgdzsbNJTU8lMTycjPZ3c7GyyMzNJT00lzmwmLycHq8VCanIyOVlZ
      +/7NBBFBbxgyK9DgOkBw36onH0wI0Qjpu+XBurfV9jrvWLGe1nc/76mE1jl/Gfal6xD1emDv
      uougksi5/Gw6Vsfi/QVJJOP0GdS//xX1cxaArOBfsIrEWetJmDQabXI8IZsDTaKVjh/WUf3q
      J2SdOxvbijK822qYcv/FGL1Ng4tFlgSkkROQxk1FsMTCnLtWbSJsdyEZdJiG5ZF28nHk/eYM
      mn93M2HvgTX1UOfmkDl8PNsefx1EkYLfnkfUG6D8/udQZAVzaQHBDjtKOIJz43ai3RtGsKOL
      wvN+Qc0rHyGHwjg3bWfHs+8y4ak7DmgeQwqp/0DDA8XgBHCo4j52xx6Oj5xLTydoc1D1wnsk
      Tx1L14JlfWTTzgXL0Zt1+2TiMo0dQeppMxje2EbHotUMv+0KEqeMYfkFt+6KRJVlql/5iMZP
      viOpII0ks4BaBFF2El+cRHDzlpiNXqtFKT0a9YTfgLOLSE0l9vmLCdQ1YCjKwzrjWMSMbMSU
      3vb0iNfH+hse7KnsIAdCFN10KYIkYjpuKvbaAyOAmq9WYau3oUtOIP2ME9jx/PtM+/AJQh2d
      NLzzBZFOG+aSArIfvBHzsDxWXPxHkBUkox7b6k29cnMPZlLK/kBQD+08BtcBBjF9rttSjqIo
      mI1GhuXnYXc66bDbKczJQepWUDq6ulBJEvEWC01t7VjNJowGA22dnei0OixmEza7g8R468CT
      iERwlldhLs6NeSNlBU1SPEGHB3d55YCKmWIyo1bHlNyBIKgkcm67msZPvmPL/S8AsWQSRZZJ
      mDiKjoXdyfCCQEJhBqr6aqjrillMdhtHJQikZqZjuulCll1wGzPmv4ooQNkfX8S9udvhJqwn
      cWk9o1+4Dw3gb25n891P461uJH7CiF5lTdwV1fgbWzHmZRL3q9NxfT6vfwfVIAhrjXRub0FR
      INDaibe6kYzTZ9Dwn7nUPL+ryFfX0nVEfX7yP32OSW8/QuP7X6PRqQk73QjDc/E2xcquDLv9
      ilh3nUPcH1nQDF0YBOyNAwxibw0EgyiKwraaGjZu20ZRbg4+fwCDTseazVvIz8pkQ8U2CrKz
      sTkcJFqtSKJIm82GQaejy+nkqGHDCISCbNhWQUpCIqOG9S1nEnK4WHTKzRx19zV4NlTgr29B
      kRUSRhZgzEnD1jRAF3iVRMlLD1Dx27v6JQJBo6bggVuwTBlP85JXet61a81mPNtq0GekkHbK
      cUQ8PoxxOlRbNyF7BgiBUBQijc04X3uLEVedgS41gTXn3bRr8XdfY/thDeV/foyxrzzE5ruf
      puXzhQC4Nu+Izambs6utZrTdGWCazAwSr7+a9kefgn0seCvFW9Gd/SuU//cSO02GuvRksn91
      Emsuub3P9c71W+laXkak3YZr0fJeGWbm3EzGvXgvxsIcZL+/V3LSzw5JGvp2t4MpwYrfN6AJ
      dNn6MnIy0tFrdSTGW/H6AwiCQHNbOyvKyrCY4zDo9didTiqqq0lJTERRFLRaDYFgkImjRuL2
      emhp72BdeTmSJFFSUNB3gmYzKoOR2n++gWdrFcHWTkJtnUTtTgRZ7rd4FEDySVPJuuRMpLQU
      nGVbifoDaBKsaFISSTh5OsWP/QXLlPG0fbeMYHMHIYcby5hhuDfvwF/fgntbDcEOOwWXnwkr
      lhHtJ/e2D8IRlOZmxPQMal/6oN9LvJX1ZF92FtX/+rCnwgNA8vSJyJEI2tREko+bgH3VJvwN
      LZiG5aIfNQLRaMBftnGvRKBKTSbtr/eQcMpMgm2dBBpaYhGwDg91b35GpMvRr1dZm2Ch+rFX
      +5yLON14tlaR9qvZCGo1yiHUCwWDEXGQJKoDGnOwpHjF3oXS3v8OGwqH0ajVhMJhBHa5JqKy
      TCAYxKTX43R7sMSZcbhcxJlMVNbVY9DryE5LQxAEZEVBlmU8Ph8mgwGtRtPnOb52J6uu/H/9
      17kRBSSToVd6JIAmKZ4xLz3AtodexLEzvFcQSDpuAmNeegBNggUlKlN+37NU/+tDkGUkvY7M
      c0+ibo/84JxjipHqemdO7RXZOTSvHzhpPvGMWcjhCG3zlqBEZQy5GRz39UtIBk+kd6QAACAA
      SURBVD0bb/k7LZ8u6Lk2Yeo4Jn3wTwSVhH/dBrpefpPApvI+cfmi2YRx+lQSr7kcX6uNmkdf
      wV1WTrQ7TVRfUkjW1RdQ8+K7dC0v632vVkPS5DHYfxjAlCuKTFnwBqaSghgX8B3cYMB+IakQ
      LUOfFjm4CDSIvKXppkRNPxSp7w5XTUqI1aFMToix85HFvasN7GRm/S38nehcXjZgkSdkhaQT
      JqPNSKFt3mL8LR2oLHGMfflBal/5cNfiB1AUOpesofrZdyi593oC7TYa3pvXo0NE/QE6Fq5C
      UEk9FiVBFBDa9z8GSmltRZRE5H7iikS9lvjxI3BvrSZ19jQSJo8m+/yT0SYn4Ny0nda5C3td
      37VsPR0LV5L6i2PRTxiLSdQilG3GYNIQqKql7sPviCCRf+UVpP76TLoWrmTL7+5B9u/aqSMO
      F+4V66mz2Sm69/eU7agjtNNzLooU//EqXKsHqRgnywRaOjCVFCDodCih4M+uC4hG4yHICdZq
      Y4LpIQyDjfgHt4Er0SjD7rkebV42G//0OIHmTtbf+g8izf1zrpZP52OdPBb39to+HVv0WWkU
      3fwbKp99G2SF3PNnE/pkDjKxYluqBCvedZu6EzO0aDJSkUNhwk29Y+9FQSFhwgg6V/WNr086
      cQo7nniDcHfpQl9dE9kXnkrEFyDQ0tFvF5n2BSto+nIJSVPGsuH2R5HDYYpuvBj7ygrsDTEb
      v+OOfyIlJVL9l8d6Lf7d4dtRS/vHXzN9ydtsueuftH65GLU1jmCHHck4cBVpQZJ6ulwKgoBo
      NCG7nD/buhD0hp/c3nYgDD6qJIHeEMvYOhQQRcxjR9BLxtoD5hFFCIJA05z5PeEL7u01aPrt
      LwQRj5e1Nz5ExO0l5dhxdC5ZDbKCqNOSd9U5ZJx5ItkXnhK7trWNHR98CIBkNuHfsg3DmBGo
      U5MJNbQgSAJCMIz+xOOIuj1ocjJxfbuYqM/PsLt+i+HzxTR/FKvOrDIayLvuIkJuH2H7op75
      uLdWU//2XBrnLEBtMSMZ9T25DhAz+xmLcql7dx5KMNyTJdb65RL89c091ymRKNsffB55L6UP
      O+YtwjprGm1fL0UOhgm22ah58T30mSm9uN/u0Bdks+2JNwh22Mm+8FQyz5mFaDLHqrgdZAha
      LYJef9CK5w4aUCEIAkLcvnn/DgrMcSSeOBXzyP6L3WrTk0k/Zzae6oaesiUA2sR4jMX9lw03
      lxaRdeYMMifmM+rssYw5YwSlx6Yz4dJJJFujyG3NSFoNklaDaDQgdotzktmEYfzoWAJ5dgaq
      xJjpVjToe7iDIAiokhIQVBKa1GSyf3M2lrGlSGo1klaDp6K6b21OAbrWbMG5aQddqzdRdOsV
      aFMTAVDFmcg45yQ6vl+BWqdBm2TFkJuBJsFC0Y2/Rpvcu1aQuA87shIKs+Phl/s0/fM3tZN+
      4Wl9kossE0bi63LR9NG3dC5eTdmND9K5ZA2CRoNoMnMwIWi1CEbTQa0cvdfKcIoso1TvOCSV
      AITcmMzprayn/PZHcKzZFIvXFwSMxbmU/uMOOlZsoPyvL6E2G8k8ayb+hjbkSISsc2ZR9Y+X
      e1laDJlJFP1iFCZvE/g9/YeUCAJiTgHak36JNPYYaq66FV/Z5pgoKAgxnWHPEipid7aUKEBU
      RluYS9r9d7LmwluJON29h9eoiao1PYp7wqSjGHbbFZT/7WXiSgsZ/citCJJIoKWDqD/IsrNu
      IGSLebQFSWLss3ejMhlo+3YpvoZWfNUNRIMhMs6ciTk9iZqHX9zrd5WTkvA39w1xGf3UX0g+
      /mi6flxLqKMLXXY6cWNK+H7SBb1Es6KbLqX07t/FMtEiEWSPe8iKBO+EoNcPacjDQNirYCWI
      IiQk/bwJMQDmuJ7cT2NRDuPffRxXWQW2H9dR+erHkJSEoTCHtgdeBFkh7PSQcuJkOn9cT/W/
      PiTs9pF67ik0ffg1CWNLsCapSQw1IHVuG/y5ioJcV4X/laeQho/COmMSvg1beseh7/lj7/w7
      GjtvPeNkqp54vc/ih9gOnDjxKFLOPJG6l97Dv7WSsivuRJ+TTu6Fv0DUaRAEAUNuBs2ffd+z
      +CGm7zR/uoDOZet7Mt2yLjiZ0f+4Hcmgw1teSc0jLw0qm+vzMjEeewx1r/UOvBO1Gmre/Iza
      t79k+O2/Yftz7+JrbMM6tgTJZCCy09ImgGXM8O7/CwhqNaLFGqsRGhqCYlmShGg0gkr9s/QM
      2LeYUms86A5SCmB/EEWE5NReH0DS64ifMhavzUGg00H74tVU/+sDrGOHozIZSJk5ieRjJ5A2
      eyrmknxSTjiGmjc/x29zYU0USQlWIYX3L6w7um0z6k3fY8jb96bTutJiLCfPxLGufMBrvFV1
      dH7zA/6qeqJeP3IgiHd7Lesu+xPuLTt6rtNnpfZx/Uc8vp7FD9C1YiMqY0xGNpYWkXLWSQNP
      ThTJv+Maim66jPijd3WcF3VaCv9wKf6mDuzrt7L+xodwlVcRcXnoXLKGuFHFJE4ZiybJiiEz
      FduCFdS99nGsDCWxTVI0mRAtFlAPbNEbFKIYs/NbrAhqzc/WMGOfcoIFQYgpwz+D5i9HolTP
      +YEtD7+Ot7qB+ImjEDVqFEVBDgTxN7bRtnAlgijiqayn84e1qM1Gjn75AfSZKaitZtoXrsK+
      ZjPJ0yeSXpJMaqgGQT5AES4cQh+nJiQYd+2CA0CdnUnm/XegTkuh/pUPB4xGjfoD+Kob+xxX
      QmEiTg+KWo17Ww2t3y4jaHMgKAqiIJAy42hK77qW5rmLkAMxZVhlNdPy1Q8Ikoq4kYUkHH8M
      /romfJV1vX4ryain8J4bSLvgNNRmI+lnzcIyqoiow4nOYkJxezDlpJF35a+wrdqwqyYRYDlq
      GKV3/5a2zxcQaunAtXk7HQuWY1u6jpTZ01AZDYS6nLS8P4+GVz6i7aslBBrb0OVk9NRu6gsh
      Ftim0SIaDAjGmJPr5+4Us1/VoRWPG6Wp/6ZsQ4W2dTtYffNjMZlTEBj98C0kjiul4bUP8Wza
      jhKNEonIpJ4zm8pX5/SE+hZccy7RUAR1vJkdT74FQNr0MYwsDKM49j+lsA+yCvGoM7DP/bZP
      B0rRoCdiTaStrgtZgbRTjiNU34xjRVm/Q4kGXS9Lz+7QpCTi9QRRZJnhv/81KrcdubKSUG0D
      kkZCMpsIRcDjk7GcfAK1736Fv6EVY0EWJyx6A1Cof/sLmj+YhxAKET++lK6ybZjGjaLwhouI
      eH1YRw8nbHOw+Yb7sS9d14tQNMnxKHFxOLrbMCEIjHvmLtrmfk/Hd32z0wpv/g1ZF57K5mvv
      xrNHQ3F9bgYjn7sPc3fBsZ1xVQhCTG8ShEPWGmkn9rs8uuJyorQ2HxxOkJBI/ZfL2XD7oz2H
      ksYNJ1rXSHSP5nWiToOQkoy7pQvzsDxEg57OH9aScfoM2hevJuL2Ujo1jfTUofrAAvob/4SS
      lIl37UZCdY0oioImKx39qFJ+OOcWgm272pXmXX4W7XO+6zNvldlIwS2Xs+3+Z/t9ivWYo9AU
      FRCqbyJJEyS4paL/by0IGCaOpcMn0fpjGdnnzmb0P25j0x8fpf6dL7o/kkD66SfQMOd74ieO
      xLO9lojby4i7f0ekroGW9+f1Owd1goXEs2Zj37CNgqvPJXnG0fww/ZI+7VgBrBNHoTPrB/Qi
      m0YUMf7jZ/stXfPfgP32LgjmOFCrUZqbYiVMhgKCiJCSChYrKTMnYchJx9/UjibOQGh7db9e
      RzkQQrLZmfTqA8RPGUfXms1oLCZK77ya4psuofr5d0iVqiA6VIncCqHvv8Jw893EZ6b3OhNo
      txF29M49kEwGJn78NBV/fgzP1ipEvQ5TaRERUYVheAGGwhx8VXuEOQsC2b85m8QJI6i/7naC
      2wcI9ANQFHyr12PJTCfpz1fSvHANwXYbLbtVyENWcG2pZMwjtxJo6+zxjDd//j1C88ClJ8Nd
      Tjxbq7Bv2kE0EqXy+fcGbKwXdXtxbK4YcCxPRRWOFWUkzT524Hc5hNj/xEpBiJmncvNhKHwE
      egNBrZmODZXUvfMFa66+l2BrJ7rkeLJPPW5Ql3vU68O5Yj0di1ez4aa/0blgGWuvvoe6f3+O
      PtCJOGSLv/t5WzfGapnuAW1yAomTx/b8LahVSKEgdf/vSZTGJvQqAaNRQ/yIfPytnQRtDsa8
      cF+vEiSCSiL/95eQ+otjaXngMcIDRbnugUhTC8GvvyHQ0s6me5/tu1AVhZpXP6HxkwUkHTse
      fWYKiRNG9PED7AljWhITn7+X9oWrqHj8TcxjSvsUzhI1auLHj+jXedYDWcFX01ff+W/BAVeH
      FkQxxg2Mpphtfr8qdglgMCKkptO5pY5l599Kwwff4N68A/fW6p66laG6BoS9+B9kWaH6zc8I
      ddpRojIhm4OoP8CIsyegNNUeyKsNCqm4BCmtd+0cQRBImT2VsN2NoFFjserxLF5BqLUjligj
      y8g+P96NFZiS4ii47UoMhTmknDydrjWbCbt85P/hEorvuBr3wh/o+nf/kaQDQXG58PsidFXU
      U3zDRdjXbEaJRFFbzeRdeQ6Nny0k4vIw7ok70KYk4GtoJVTbOGi+R8qp08m+9EwiLg++mkYy
      z5mFuSgXb1U9SiSKLj2ZYXf/jsQpY2n9+JsBxwEQE+NpX76RxCljEIc4oeWn4ifPRtDrETIy
      UeQoeL2x8tnBIEQjsfLpUTn20pIKtNpYXIfJ1GPnta8r77F199m9xL3HfgfabL2axEEsviaw
      bRt7GuQEkxkxIxvF7URuaQKDCXyDW3b2hNzeSjQYwlfbhCrOhMqgY8v9L9C5dB2W0cMRvR7C
      dQNncAWq69nxx4cpfvIeVl18e08ju+2Pvo4+Ox35xx/2X79SFDJH51Gzw4ao05L5q9n4m9rJ
      /+35pJxwDMbiXCoeeIFVF92OEo1iLs5DnZxAsLF/LiOoVcRPm4B9zWY23vEYUX+QjXc8zvjn
      7uG4JRfhWFeOLj2FuKOKibg86HLSCQxQzVsdb8HT1EH7+9+Rd9mZmItz+r3uUGFomuQJQowj
      aHUI5jgEi5WoxsDGB19h+8ufIsQnED9zGoI5DkWl6Umvq3v7C1q+WIQhK43Uk6ZQ+pdr6fxh
      LRG3B/PwPIpuuAj74r61+Hd/btYV52BbtalXIw1daiLZo5IRPHvI5XlFRKu2IeUXI2bnxTqt
      GEyIGVkIRhNSbiGCJR6pYBiCwYiUW4Dc0dprQSqpOWx47APKH3yBhnfn4dpSRcMHXxOyu4h6
      fZjVCtEBKjPvRKC+GX+Xi/YFK3YdVBQ85VUY/I4+VqZ9gahWoR43lvp3vqBrxQa8tU1oLGZS
      TpyMr7ox5viSZVAgZHOgSrSiEoV+66BG1Wpal27AuWk7nspuYpYVtElWRL2ONdc9SONH35Jy
      /NEYctLRpiZhW7C8T7KMoFKRdPJ0UGQUu4Ngcxva5AR0mamH3PqzEwenS6Qg0P79CsoffImg
      zYF9fQXxY4ez5Y7H2fHYa3QtL8M0vICyWx7BVV5N/lXnkH/ebFzfLUIb9qJTwqRNPQrziCKC
      dheBhv53Kn1RLlJOJr6G1phMq8TyWVN+cRxWYwjB1dv8KSYkIVriIRJGcdoRDMYY4UQjSDkF
      iPGJKB43gk4H4ViXQrmjrZfnt7PJT/Xny1EiUaK+QHciu56oz0/CmGFEtlXuOc1+4WvpJOju
      bSESAJM6GuOg+wnRaCD3L7+n5pWPe8IWIm4fmkQrjR9+g7eyN1dSx1sY/9pDBJraCDtcKMSi
      YU0TRmErryHU5STY6UBl0MUMDkY9okZNx+LV+OqaifqDJE4ZQ9yIQgyFubGEndpGkBUEjRrT
      8Hwsk8fS8vn3eLfXIgeCeCqqaf7o61iv49LC/X7Hg4GDJpDpM1N7IhvVcUbWXnl3T2iAr64Z
      9/ZaCq+7gM5Fq4mWbaDipdd67SD2ud9hn/sdqpQkTMU5eOtaerKVBJWK+OMmkHbp2TR8tpBw
      IMyw266g7cvFmEcU4q6qJ5KU0kcEilZWxDyV4TDQbZOWFVCrkRvrQVEQM7MR9Hqi28tjItge
      li4lLr7X36JOw4g7r6V94UqyTp5G5br+bf97Iq6kAHe7o1cBrsRp41C31xHah9aue0I06NFl
      pmA5qhj72nIQIHHyGCpf/AC5H4XXPKIQ85gSsq+7mIp7niJQ0wgeP1IogqhWIYcjWMcMp+iq
      c6i872nESAippQlDciLisGwMR5VQ8dgbCKJI3asf4Vi3FQRInT2VkX+9CXW8hR+n/7pXhW6I
      Ra1W3Ps0SbOmov4vMI0eNAKIG1lE0Q0XYVuxkeQpY9jx6Ku9znt31GEtLYCy9TgXLR9wnEh7
      JyqTkZKHbiYSioIsYxo1jLgxJSy94DYc6ysouuosqv75Bkokiru8ElGjxjMiiYQ9B1MU2D1e
      Zados5sCL9fXINd3Z4DtGfMjiKRfdQlNZU3Y121B0mpImjaejbc/SsTrx1VWgUYU+vQ16w/m
      0cPJzsqg4T9fgiJjGl5A8Z2/xf7MS4QamvZ6/57QFuahssYx4bm7qHv4GcSudlKSwmQcnYIq
      MYG6eUFay5uJREEyGrCt28qW+5+n9f15hO0xUTHYbiPYbiPpmNGk/vIEVEE/1Xf8HXx+ZEAG
      wq0diICUaiVhbAl1b8zBvnpX3kPrvB9IP/NE4obnE2zuvzRMqNOOu7yShN0sZ4cKB40AAu1d
      bHv8TZSoTFxR/4pP+ztz8C8ZePHvhOzx0vX+p5R8+K9einLaSVORAyHqX/uklylODoWp/GQp
      R89KRRhCU6g0rBRFrSX7rJkY0xJInH40ktlE/bsxh1Kwy0X8qOF4Nw5sFwdAFKl6Zx7+Vhui
      Rs3wP11D09xFLD37Jkovmb3/SUiCQNxxk/B9+D7+uZ+R1F3LNbIq5rmNAJlGyJgYRyQjH0/W
      CLb88z/UvPIxqkhf652vso647BS2/+H+AatSe9dtJvmsdLzuvrkizrIK4kr75nf3mnI/pQ0V
      RcHpc2P3OAlGQsiKjEqUMOtNJJgsaNVDWxECDiIBqONMWEYV46msJxqNIup1vTKVTMW5hDb1
      bcczEPwVVTgXLSN+9vEoioJ9zRZ8tU0Yc9Lwru+beRXyhghnDkNTv+/PGAwK0OXRUXnqtYS7
      YgvMNn8Z8dPGkzprMp7qRgp+ez7JE0rZfNHN/YodO6EpKcK2OkYkcihM9csfEXK4ifqDRK2J
      GMaPxrd2wz7PTZuZQnjuB4Q6B6/iJwigbqnBamth3A2n01llo2N+3/CGqMdH7cMv7rUke8fc
      75Hy8/q+X3JCTKfITu+3U402PRnziEKcPjcba7eyYvs6ymrKqWtvxOlzE4lGkBUZBRAQUEkS
      aklNRmIqR+WUMDqvhCnDJ5CbnIm0D5bCwXBQO8WH7C4Wz74Gb3UjpsJsrKX52JauI2HKWPIv
      PoW6m+/dr/ESzz2NvIf+RKDdxsLjLyfY3kXy9Am4Vq7vk0oo6rScsPh1Qk/fjzIEmUsBXQKb
      v6nrY3IFyL32AgpuvxKVUU/Y4aZr/lLq/v48ka7eVihBJZFx9QXoJ45h5cV/7MlySzp2PHFj
      SrAtL2PsE3egN+uo++3thAdI69wdkkGLJUWDJOxnPL5KhcOaT+UXfUMYdGlJqB1d+8SFUi85
      i9ZVW3Fu3IYgCphKCvC32oj4AqRMG4trVVnvuCeNisgd57HA2MWSLStx+vo6FvcFaklFaXYx
      p02YyVmTfkG88cAS5g+OFagbiqLQ8N5XBDvsmIblEXa68dY2x8IcRIVI9f5VW1DFmUk8+2Si
      viC1//6ciMdH0rHjSZgwEmdZb7Gj4IZfk3r6iYgpaUTWrQLlwBM2hPhEugxF2Fb230Mr2NKB
      YDTS+N48Nv3xUVoXrMA4ZiTpv/oFmuQEBKMBMSGezBsvI/Oq8zEW5hB2uvHsqEWfnUbmubNR
      6XU0vDuPhg+/IWnmFFJ+fTa+TRVE2jsHTNzRlxZhNoSROIBIV1lG67fjF40EnLsWqGTQkX/N
      eXhW7psybx5Tyqin78KQm0HWBacgaLV0LFqFEo4gmQwc/fajiBo1otXE6sQQb40XeM9Wxvbm
      aoI/od2RrMi0OTr5cetq3lr0MZ0uO8UZecTp90+xPqgEIKokEiePwV62lbiSfNq/jbFbJRIh
      UNOAXrV/zEdfmIscZ6XivmcI1jeh0mkouv5C8q89H3V8HFGfH5Veizk9EVUoSNt7c/E22ZFS
      U5EcLQdUVFiwxGO47o90rKvEVbZ1gBcVMRblUv3S+8j+IHIwhLe6EfOYEizHHU39h9/hqmqk
      /fuVdK3YQOK08XQsWo2nqhF9dhrti9cQ7LDhb2xDCUdiXGTdVprWbMfri2LMSUcg1ppJlZyE
      YeIYUq6/EoM2glyzb2bXft8NSBiWiemcs0CUENQqCv5wGVnnn0zTqx/sEwfQ5Gez/el3aHxv
      Hq3zFhPq6CIajoAokP+bs0j/5QyaCuL4p3s1n0drcYhDG54CEJWjbKzbyodLv0AURUqzilGr
      9q1+0EERgeRQGMeGiljpDUli+UV3YMzNILBbEnf8qEIMHQ37XO0MQFUynNZ1O3qZ1kSNmnGv
      PUTCtAk4l6yi+p5/EmrvHbUoSBIJpemk5Yh9ujsOBqmoBO0lvyWqMdH62Xy23fNUv9eZSguR
      khLoWNTbaWfMzyLq9u4qQdINy4SR2NZXoESiSHodx37xPA0ffE31Sx/EdvbUxF6RpfqcdAwF
      2Yx77Ha0KQkIOh1yZwdd1187JPVbTX+6m3UPv4NtWRmCJFJ6z+/wfrcY9/qBk3oAEAWiKWm4
      a5t7HS647kIyzzsZfXEOL87/D//69p2ftNvvL0ZkFfPo5XcxLGNwRRwOAgeI+gKU3fhXtt7/
      LM1z5tO5aBU5F51GyZ+vxr52C3IwhCbRSvYlpyOFAoRb97G5hCRhb3cT8fUu+aFEZTq+X0nH
      /OXY3/+cSH+V4hQFf7uLaHoxiafNRGlv7m0O3R2CgJidh+68y+D401h786OUP/g87u11iNDH
      cyqoJIbdcx0Rb6CPGCZp1X0WP8Q4oGjQE/H60aUmIEeiaBKtRPxBMk6fQdTjJdCyS6FVQmF0
      2ek4y6tp/XY5yceOJ7xyKaGVK/qMfSCwryundnE3d+vuPF/6wO/p/OL7QXN9rTOm4LE5ezLD
      dsKQl4npVzO4/uW7+WTFV0QPNBnpANHh6mLOiq9JsyZTklk4qG4wtH3ngdZ5S2iZu7DHFh7q
      cmJfuYHN9zyDs7ya/GvPQ5edxpb7XyBgsCIMEGa7JxLOmB1r8tYPlFAIXcg/YJLJTnQtXY8v
      LhfT357DcPPdaM+6CPWxJxJOzqOtPkhjdZjO+NEoZ16FatJx1Lz+KR0LVxFxefFU1qPJyyZx
      xiQkowFBo0adFM/wB/5A+tknkXf1uRh2i+5Ux8eRd/W5sYK+e0CXlszw319EXIoFg1ai/f0v
      qHn+XbrWbKHlm6UYC7N7Xa9Jiid11hSUqNzT9Du8dS+7835A7e3qaRgIoE1NJH76MeT++boB
      6/FYpk1g+BN3YSrK63OuK1nHRU/cyIrt64dsjvsLfyjAn996mBe+fmtQAhxyM6h7e00f2dHf
      1EbcmFIESUSTaEVjjUOQRMSkRNzGBPSybdCwZ8uJx5J9543ULViLv59FLgoC/up9KCEejdL5
      5UISZx+HauRYpBFjqHvyDeo/WL9rZ9/2DQ3vzyfjsrMJ2HtbfES9lnFv/h1vdSPrrr0PT00j
      de9/Q9JJ03CUVSDq9agT47GMGY57Rz3N3yzHkJ+Ft7t5X/dkkR1Oqv/6PCgKIacLAdAIAqrU
      eEwl+WSddzKhTgf2NZvRZ6dhGVPCprueRhAFJr/zDzQJcfiae4sdPwUao5bhN/2a6n9/gcZq
      ZtRf/0D1i+9T8/JHhMNgTkpErRYRBNAX5pBy5mySzzoJUauh5M5r8OyojVW3FgQCY3L4h+sH
      WoKHoK/cHpAVmSe/eBV/KMCtZ1zTLycYcgKwjo0t9N3NkqbiXCa9/QjbHn+dyqf+DYrC8Fsv
      I/Xk4yivasTvMGLRKoRq6nqxXE1GGimXn0fKJecgSBK5V55LxX3P9HlmwtEj8a8cuLHd7vDv
      +P/cnWdgHNX59X8zs31XuyqrVe/uvRds3DAG00tC7yGEmgIhhJD8AwESCC2BhBpCD5hmusHG
      Nhj33iVLVu91e9+ZeT+skS2rWDI2mPd8sT1zZ+bu+N659z73POdUdf69/uX3qXrsxW5l1JhM
      /X/fxTJlHNoka5zvY9STee48VEWldfVW3AecXJyb97Dpmntw7yztrHvHpj1EXPGIV/7V52IZ
      lItnz350STYMyVZc32zq7kmtqkh+L+H6Zor/+jzh5nZUBBzzpmEuyqH6zSWAgKjTxD8wx1Cm
      Ro3FqH33CzTJNvTpdvY+8ByujTs6w7TuVg+yCuMeuxNLXgaiXt9JpbaOGszJy17Eta2YtoiP
      W1Y+TaP7h2/830JVVZ794nWSzDauPeWibp3gmK8BTHmZRN1evPviI4G5MIfEiaNwF5dT8dzb
      RJ0e5EAI9+4yim64CMuQPOo/WYXXEyakSOT/+locF59F+jUXkXbxQgyaGLHtW4ju2UlCihFB
      juGvb0NVBXRJVgp/dSUZZ8ym7aPlR64cYMjNJO3is4h5/ey98U99JobEOlyMe/FBUmaMRwlF
      qHt3GQ0frUQJhvEWHxS/lf3BTsU2AF1K3G9Ln5pMpKUN1459CBoNw++/Dc+6rb1SBFAUkieP
      wrW3knBTG0o4gnPrXgpvuAhDaiI6kwFTlgNDpoPY5g0orcfGuFw0mlAnzkBjNDL0t9cgGXS0
      fbWp87wqyzhmxHn/da99QP2iz2hZthbr6CHo0+1IBj1CRjK//fQpiht7FwX+IbF+31ZG5g6h
      IK3r9PK4RIFUWcZfWU/U5UFjtbDj908QbmkncCCZAkDQahn1l9vwllURslyNkgAAIABJREFU
      6fBQ9/6XAIz526/IHmYntOTDToLa4VA0OpSsIhJ+9nP0hYWEG1vZdupVyP2gEWdefxHJFyxE
      cXnYcfEvj1h+xNP3oSvI4ZvTf9HZyJOnjiHa4cJXVoMu2caYR+9kx28eJnqA7Jc6byod24pJ
      nzuFhsVfdt7LkJGKQZC7WLoeDkNBDq66NmKHCAKnnTIV59ptnc+3DC1g2KxChO9gzNcFaZlU
      x9JoXbkxPtKdP5+a1z/u9AkQJBGNSLcFsakgm6kfPYs+NYkH332Kl1e8c2zqc5yQak3hnd89
      Q1Zyeuex47IPIIhifOrQ1kHtf98DjxeNRkLU64gc2B1NGj+cho+/pn3tdnz7a0gYmk9CqonM
      UDnKxm9Q+/AmFhQZ0d1G7Jv4V18/fgLhuib8hxpS9ADRYqKtuo2Sx16h5YvVPfJgDkfSrClo
      0+zUvP5J57BvGzUIxynT8ZZWxb28rruA9NNn4tqwA51JjyU/E0OmA8mg72J6h6qiM+j6pEkY
      C3PQpKV2+vcas9LwF5ejHmKUF2l3EQ2GsRmix8QwsaVdofbrXSiRKHIghGd3GWMeuRON1ULi
      xJFodRrCDd2F0aIuDwnDCynR+rlv0T84jqSCY4JAOEh5YzVnT5nfORU6LlwgVVGo+tcbVDz2
      Yle/XY1E9tmzybjwNEz5Waw5+xYABI3I6JvPQbvyAwgOYGs8FiP07v+Q6+vIufVK/HvK8PVC
      RBN0WrJuuoJdj78OQNjlQ284AulMAGNBNtbhhRTddAnVr32EMctB0uTRlPzteVRZofr1j9Hb
      E3F9vYHQ/ioAWhqaESSJxJPGI2g1ne/AsWAGllQb9S+/3+sjTUOLSCzIYdCtlyEHgsTcXvb8
      7tFu5QIRCTHVgfpdp0F6PWFDBnBwUa2Eo+hTkxn/rz8CsOG8m3u93FPXwAP73/neQ51Hi2+K
      N7Js+zecNn42cJw6QNMHX1L+yAvxXOFDEZNxrlhHwQ0XE/X40KUmkTR5FOlD7Gi//hCCR6dC
      HV23CkSRYc/eT8v7S+n4YhWB8uq43WeyjcSTJpB63gISZ02G1FRaVm6gY/MeVK8bwd/7MxOn
      jcc2cRSePfsJ1TZisCdiyc8i1NSKesh0oPq5RQiHbfSosoxr3TaG/PJKKl58n5jHR7ixBZ3N
      gnXiKDxbutMqEscPI3lQBmrQh7J3L5okG5LJjKjXdVljAKiiRJOcTJrWNcB87K4wX3I5WQmZ
      NG8s7px2WUcOOih/CCRNG4dzfXdynqjT8qGnhOKWo9+N/iHw0Pv/ZsqQcSSZbcdnClTy+0cJ
      1/WiJSor8SjLkrW4tpWQODSHbKEhrjr3HaDUVqFx2Ek443Tqv96Gq7oJy7TxjH3tUURHKi1r
      tqPEZDLPmIVj1iQCFbWIZhOx1vYed6NVvR5fUEaJypT/6w1aV24k0u7CV1oFikrGWXMI1jWR
      MDQffL6emZOKSqTDHXd/V1WCdc24t5eQfuFp2OdOJdLuRNBI6NPsGBMMiC2NeNdsxrd5J77N
      O/Gu3ojvmw3oTHoiwVjnFMMyJJ9xz/6ZpHkzMeRkENm65ajemeHU0zBfdS3mwhxS50xGYzJg
      supJybDhXPQhrf9bjHf1RswF2YTa3IQP8VoTJJGEy07j0cBmwsdYfeN4wxP0odPomDZ0wvEZ
      Afpa5EE8ISLvyrOJuL1kZGhRG3t3chwIwh+9R+3XZTQd0MZp/GItmvufpf7DFcj+IKJBz/h/
      3k3NS+/h3HjQEcVgM5M0opCoy4MuNRn7gpm4qpoof+4dql75MO6VduhzWjsY8puraF29FU9p
      NQax991Sf2X35JbWVZuJhKKY87KYtvhpGh5/nra3P+4yqnwLNRZDG4uRmm3DdPqpVL27jNSz
      52IbPSR+vignvkH2yn/779oiCBhOPQ3LDTchCAKqqmJKTUTfUE1kzy78h4zcodIK3CvWYElz
      YD1vHuFgBMlkIO3MuXwi1eH5uG9FiBMV769fwvWnXnp8OoCxMKdPLRhTYTbe0njMPyHc0pv3
      xYCh+rz4Nq/ocqxlxYbOHWIlFKbkgWcJH6a5E/IEcFx+Ho7503HvLsOUnY7doMNfVY+g0RCq
      aSDS5uosnzRxJJJWQm81EUswkzJxGK2ff9OtPoJOS/q5p1D71pIuxw0ZqYTLajFmpeFevpq2
      dz4+sry4x4PYUEcsGKHpi7VYhxeSOHYYptwMTOech3bQYHwvPEusorzP24iONMxXXIX+5Nmd
      SSnRljbKb7qbUGkvIUxVJdbUjBQMMvTZhzCPH4WiKLz7wNV91/kERqOzhdXFm47PFEiTYKb5
      oxU9LjAFjcSge25GNOqJVlaRHOmfAFR/oc9Ip60xgBKJok+3M/LeW2hdtQUlHEE06DEkWzvt
      ibrUS5LY99jLVL7wNjX/+xSt1ULde0vx7N5PxOUldfbkONM02USSUaH9pTfRu9uwGUEbCRL2
      +JEPoWoIkkTW5WeTe92FeIvLCdXHF6valES8FfWEGluxDs4jtHQ5srN/079oQzN5v7yKxi/W
      UPf2F9Qv/hLHnCkYHCkoGj0hkx2/J0rU40djsyBZzAgGA2KqA7ILqC9zUl3mpX7ZZoLVjdgm
      DEfUaam773F86448jVLDYfy7S0g+az4lrdU898UbqMfs8/X9QxCE47QPoChUPvEylf94pav4
      kiShGE0oWi36lEQyhqaQHhygA+MRIOUVwNW/YtstDxBpd5Fx1hzSTpuBa1sxnrJq3Jt2xZWT
      D4OxMAdf+UHhX9GgRz5E3XniU3cT/eprfOs29/i1VlUIqxK6iRPQF+TS8MUaAvXNSEYjQ++8
      Dl95DdWvf0LCsEJcB0hzGqOOTPPAoicRazLNlQeJcsPv/jnmJAs1/3yZaMfBUUqTmEDOTZeR
      dfWFqJLExgtuxX2YZHvipFGMfuh29l95W6++Yt0gCOT97W4+tHr467s965v+WGDWG4/PCKCE
      I7Ss2Y63upGEofkkThyJ/dQZWMaNpPnrzcj+IOFWJ/YcKxZxYJr9R4RGS3vAQM0bnxB1+3Bu
      2k3CsAIG3XoZ+tQkmpZvQJ9g7jIKJI4fTurcqXQc4pRoHVGExpZApN2FpSATY005wR27ew2b
      CgJoBBWdpKAfP4a6D1aiygpKKIynuBx3SRVRt49QUxvJ08agRKJkTB4GTQMbAQWzCZ8nFJcf
      0UhoY2Fa3vyoWwNWQhFcq7eAJBF2eql+obvaXKihBbWxkVj1wBS/BZ2W/yk1VLWcuJKH/UFU
      jh2fNUDVS4spfexlAGJRmYlvPo7GYqL69a4evMdDYVoQBXyHic76SqtofPcL6t74GMnpRGdP
      Qjd+eNwCaNRgcq48BxSFji17cG0vQW9PZOR9t5I4YSS+smp8H3yC852P+vX8aH0TnpcWdTtu
      HV5Ia3M7hoxUpv/v70hmI86Pl1G9fWCMScugXFIy85B9ARwzx9P6ct8yirXPvEHCrGm9nndv
      2UPv/pA9w1ddy179MZCcPwFwXDpA5JCvq+wPEPMHkcxG0k49CduYofir6jFmpBIKKXCMpWFU
      gxlDejqCRhPn3et1BErK2f3OQSnwSEt7fI5+/nzybrwEVVUJlNeSdtI4DCY9SVPHYB1WiGTU
      Y0pNpH5J/3hG30If9pOQZcfX5ETUaUiZPAqjPRGlvYPcK89BNOgRNRr0edkD/n2emmZadteS
      OnsyBpPuiInraiSKf3fvtlD6tGRoHBizNKTEaHUfm8jdD43j0gEKfnYhHZt249tfg2PuFFaf
      exvpp80g6vLi2rGPrAvm4y2pxFnjJH/EsX12SNVR/Mh/KfjZBVgKs5E0EqX3PNGtnCrLlP3t
      OdLOmYt761723vn3zsSOjlWbaPrgS8Y+fz+R4hIU38A26ERBZfD5szCeNp/qZ96kfek3nRyo
      fX/6J671Oxj5xN0Yhw1Cl51BpK53qfKuNxYxTxiDJSSQfd48Qpv6N3okDM0nJkhdbFUhnriS
      e8Ml1N33+IB+nyvV8qNe/B6KY54QA3FtzpPe+wenbn0Xy+A8fGXVNH62qnOn0V9Rh2dvOe7a
      dtTUjCPcbYDPnj4Tgz2J6tc+ou69ZTQs/rJXFWQ1EqX+zU8pvucf3bKa/GXVFN/zBKF9fYcV
      e0O0oYloawfty9d2lQ9XVZo/WUntS+8hmYyk/fyyuFtKf+6pM7L/jSVEWjtInjIKyWLq13X6
      NDuT3nqcpOnjEI0GJIsJ+9ypTHrrCWzzZqCxd5MQ6xWCVkNs+ph+lz/RcUwWwaqqEpZD1Ptr
      qfSUUubayz7XHsq9pbSnx3AmRrBfPo/cq84kY/pknBv3UHDN+WhtFiSTAaO/bz2b/kJMz6TB
      a6J56VrUaCyuPmHQIfeUJvlt3WMy/tKqHs9FWp1YHFaiA1wkAmgz03CWN+Ir7jm2HvP6yfjp
      6URjKpGGpm5u893ul5WBPGgIntIaVEUh+/z56GwJtC35+oh1SZw1hbaVGwlVNyDpNDhOPYlh
      9/8aQ1YacjhK1OUhuKuXhP/D77VgFm3zJ7Bk+5GfezgMWj3jC0eBCuFYBI2oQVVVpM4PgEBh
      Wi5WkwV/KIBG0qCqYDVZyEpOxx3wYtDpmT50ArIsY9TpSTBZCIRD8Q29oxiVvtMUyBNxsc+5
      hzLXXhr8tchqLyG9M5NoZB/ravehT9eTcmcRyaNGEP1jMW0uiZScfJTaqu9Slfju5k+vQFpT
      1uVwwpihhCt7b8CmQbk4N+7s8ZwakxFt1qOqji4zjVh5d0uhbyH7Auy66zGqX/8ESa8le1wh
      alVVd7MJScI2ZzrN9W5avlhHwfUXkjhmKEkTR6JGh2AeVoS/pPdRStDpqHn5gy56Rg01n+LZ
      XsKQ+3/N5lseIObxkTUoB7W2ts/AhGnsCLL/+Gv21e7qtUxf0Gq0ZCanodfqGFcwkqL0XL7Z
      u5GM5DS8QR9rS7ZgNVmQRIms5HTMhvgI1+ppZ0hGIYFwkCRLIpv37yTRbCU3NQuLwUyuPQtZ
      kdlSPvB6DbgDqKpKW6iZ9U2r2Ofc3Xuj7wVhJUxDUpiG+g/Q/8LAuOTJoObCw3+D4NGHRHVz
      TkU7eRp5RcNx7diHa0cJieOG4y6vwzy8CH9x90aSfuECMi8+g4Z3Pu/KWv32nqlJ2M89Hf/n
      y7vQkY8IQcAyfTIhaxVtK3tOXDfkZtLwSfwrKoejmE6dS+bMcdT/5y38e0qxDMpFl5NF7fJN
      OLdUYMhOJ+fi0xl13y1IhgMSgRqJ4U/fx+5rftdFceNbaO3JRGWVWGv3iI2vuJy9dz1K8IDy
      dtgxDoIxjLEAstPVtbBeh5psR5o8mWCLE510dN9NRVXYUbWXyYPGUtPWQLgujDvgRafVkWSx
      oagKlc21WAxmMpMdQHzHtqKpBrPBjFajpdXTzvShE2lyttDiaseSbqLZ1UZGUupR1WlAG2HB
      WICv65eyp30bMbWfvJN+wKQxM6HOyPB31yD20BCPBO2kaZhu/g2CLt4wlJiMHAzhLa1ixx2P
      IKBiH1VIy6dfo8RkJJORrMvPpui31yFoNez+1V9pWrys600lkcQZk0icNg5x+2aCA5AqFJKT
      8abmxqcXlTVdNqgg7h+Wc8MlNHy+GveOfSAKTHr+Pnz7qij7xyuoMRnb2KGkzp1K6ROvxq8x
      G5m/6W0MjoPzdVVVCVY3UPv6RzS9+TGiHEPSadA57CRMGEnL1n2ESyt67NwAWnsSlqnjiXr9
      qIpK88oNzHzz74gBP5Gauri5SYKFfc+/h7cy3sE0VgvCr8/j1r1v9vt9HG8MyxpEXXsDvtDA
      P6D97gCVnjKWVC3GGz1++Z6ZLTFmf16Ltb2fP0TSoF9wBoaLrkTQHlSXUKNRols3E/hqBcGt
      29BpDiiha/XIWiPm2bMwnn4GUoodiM/HK//1Oo3vLSXmC6BPt5MwfgQVb3wKiopjygiSw06i
      zUdeqwgGPX5HLo0b4nPq3ItPR4yEca7bjhKJYirIQtbqaV2/k7RTppE2fyrlz71D7iUL2f/4
      K10k4s1FuXgP6PprrBbmb1qEPiWx83zL0jVsu/HPnVwnQath9KN3kX3xQlRVpf2bLWy/4re9
      enhpbBaE9HQiXj/jHv0tJX9+CtUfQA6FsY0dxqA7f0bHlr3s+UPXKFosJ4W7JzmJSSeGycV3
      wRE7gKqqbG5Zy9f1Xwx4unM0MMUkFtbYcazbg9LSC6Vab0A7dgKGc3+KmJvfmd2jKgrRTesJ
      LHoD5Uh+xgYD+jnzMV50OaLZjKqqyIEgciCExmqhfe121l50O6gqttFDSB1diLZsL5Ha3mPm
      gtlEMCWTgCzh3FqMIMCk//wFQ1oy++79F8HKuLWqokAMgSG3X0PqyRP46rQbSBozFPfWPV1o
      FkPv+hlhpxf3rlKKbrqEjIUnd55TIlG+mnYxofqu70hjtTBn49vokmxE2pysm3cVkR6mQADm
      YYV4O3zI/iCWVBvBw9ZKksVEwrgRtK7qmnopJiXwwAJolY/xLv4PgD6jQKqqsq7pK1bVL0Xh
      6LU1B4KoqFKeEiVr4RWknbQQKScfKTsXqXAQat5gana1UN+g4FETMI0YhiEjNR4BiMUIvP4S
      wddfRvW4jvygWAx5fymRTRvQjh6LaLUh6rRozEZEjYQpNx2NQUekuBRroolweRW63Oy4nIsk
      HNyAEgREixmpsIhowWCad5Qz6s8349q6F31qMoXXX8j+h56PjwChuGyiGomgM+sZ8ttrMWal
      EaxuxDF3MqbsNNw745tWBkcyRefPJkGKkmjTIjY3EK2qQdDrkBJtBGsaqXjq9W6LViUcwbFg
      BsbsdESjgZgvgGtD9+mboNNiGFyIv6GVomvOo+2LVd3KqJEoMY8PORLt8pzUmRMpHWmjvqOX
      D9SPCL2OAKqqsqH5G76u/2H43jpRz08GXUVOQj4AMX+AdWffjHfPwSiPaNAz+c3HSJ4+lsB/
      niX85edH9SwhxY713r8iOQ4mS7u+Wk/57x8m2tI9kmPIyyTnV9cS7vBQ8+ZnRGIqsZhKwc8u
      QNRpqX3rM9rXxsVlzbnpxJpaeiTQZV60kGCrm+ZlaxH1OiY+fy8as5GORR8g7t8Hzo7uldVo
      ME0ci/Xyi1lz6V3dPb4EgZM+eprAnlJ8O0uQA0HaN+wi1ObqlKrR2BLQ52WhyXBgzs9GUmNU
      P9edvgFx9mraeadS8/rHIAgkThjBmMfv4rmdn/HM56/19xWfkNBpdL2PAPvdxSyt+egH2/GT
      VZkKdylDkkZi0BhpeG8pta992KWMGpMJN7ViTxEJvfvW0T8sGCBWWoJ+9ikIoohnw3ZKfn4X
      sqfn/OSY24tv5z7IzaPqveWEWjrQ25MYfOtl6JJsNHy8knDzAapAJNyr1ascCuPcWYYak1Fl
      GVESsUWchL9cDoFepheKQrS+kcCa9UjJSfhbu67JDMlW3J8up/3zr/EX7ye4vxo1EEQjCaSc
      Mo0h9/6KsD9E0/IN+EqribS7sA7Oxb25Z+VrBIGOkmqi/iBDf389ox+6HX1KIpIosXj9kp6v
      +ZHg5OGTe94J9kbcLKlejPI9zPn7gj/mY0nV+yiqQqC6Z9ugQGkFwTdf+87EOrm8jPCXn6OE
      I1T++Ym4v28fiDS20Lboo07pw1BTG6vPuIlvTr8B2esnYWg+xux0TPm9830MGQ4MafGFOIKA
      WFWOa9HifoleKR4v1oiLvLNnYhmSj7koB/uUUWj93m76qIIAgqrg+XoDcnsH3rKDZMFATSMJ
      o4ci6g93VItDtMYZsWpMxrmtpNOhZ2LRaNISjy70eKJgwfhZ3TuAoiosr/2MYOzEWODU+CrZ
      1rqBhJGDezyfpAscEwMMgNCnH+Jdt4Vgb5lRh0EK+klfcBLmwmw0JkPcbTEaI1DbhG3sMBBF
      si5aiKmgeycQ9ToUUYNt4giKbrmUwovmY/b0PFXqvcIhEkIuZi57kZO/eg1tLNK3TIqiUPm3
      p3HMndxJv0gcM5S0BTMY/rfbu3WCxMmjmfL2E9hGD0aXbEObYMK5de+B3VuJMyed0v+6nmCw
      GMycMnpm9w5Q461gn+vY2AodK6xtXIll3jhS50/vclxnT8RRlHLMnqO0NON694N+l1dDYbw7
      SrCOHEzqrEmdxyWTkdSZE0gcNwxtkg3VkoAuzY6gkRA0Ejp7EtZJYzAWZDP+H79n5H23kjEq
      96jUHcL7ygis30KwogZ/8ZHVGWIdblInDmf0A7dhciQht7Sw+eLfEHX7mPrZ8wz5482Yhw9C
      VqBjewnbf/Fnxj3yWxxzp1D9xiesPvdWPAe0ji466ax+6/CfaFg4YQ7JCYldd4JVVWVN4wo4
      wZh+gZifba7NzHjxQerf/QLXlj0Y0u1knjaNyKP3ciwDVNH9fYtrHY5BN/yEjpIaYj4/ydPG
      gqqSf/V5KKjUf7gCJRLFW1qFEo6QMDgX0aDHmJNBw0dfIazeRvb5p5A8dQyRo+AbAaCq+Fev
      Qztter/cKQGca7dS/8nXyB1OZOION+6te0g/Zx75t11JycP/QQXUcBTPnv1sv/k+hAOUEDkY
      JnwgrFqQlsOpY2by2daVR1f3Hwg6jZZr5v0UOIwKUe+vod7XD5XlHwA72jYzPX02uVecQ+4V
      5wAQ219K5HCKgsGAdthI5NpqlPZ4BEew2ropzQmWBBDFbse10gB6kyRS9b/PcJfG35lt1GAy
      L5jPrnv/RcLQAnIvWYh7x77OjSrPvmpS50zG4EiJ27MIQnwqEosRbegnJboHRCqr0c+b2+/y
      9Ys+I+ztrk7X9NEKQh3ubhpEgeoGsi6bgGTUk3ryROwzxwPxnNrbzryWL3euJhL78UijnDtl
      AYMzCoDDOkBxx84TlucdiPmo8JQyNGlU5zG1h0iJYDIj19cipqWjGTI87g1mNKI0NSKYTPEF
      pkaD6nYjpjqIlZehNB9MS7SOG0ZLwy5k95EV6gxFeXgbD5bzVdSy74lXiXn9hNucnLLmDcqf
      XYS3JL6m0JgMjL7/Nkx5WSRNGE7t219Q8ewi+NkFqIeHMwcANRTGPKQATZKN2JES7AUBWe79
      /ziwv/sHUJBEEESCtc2YC+PisrFAEFGnpSg9j6vm/oT/LDtxqBF9IdFs5bYzr+3cPO1cAyiq
      QukJNvc/HKWuvV30JwVTT3x4Nd7wERAs8XQzpSMekoyV7AWEuAO8JKH0YCuqzUgj66YrjlgX
      QSOR/8fbyDhrzoEwC9jGDiVxTFyvx+BIofI/7xF1ekieOobkyaMY8/DtWAbnIRl0SCYDras2
      0fDRSnb87jHQ9RyF6Q9EawKqIJJ67qlHLGs/Yw5ae1Kv561jhmLMy+xyLGX2ZKJeP4HaJuoW
      LWHjJXew6uQr2HTJHTg37ODWhVeT7xh4dtsPgTvP+wUZSY7Of3eOAK3BJnzRo7Os/L5Q6SlD
      UWUkIV5tMTkFtLoui0e1o4PImjjLMra3Oz02ur1v+Q8pI4uUOafh3VOG85PlPUu76HUU3Hc7
      nro2at9fjjEvE/uM8VT/7zMEScQ2ZiiyP0jli+8B8QT7kz97ltYv17LztvsREFAlqXOpJWg0
      aLOziJQMbP3xLdz1Hew66XI0JgPW/ByiVT2vJxLGj6Dor7+FJ16h+vnuG1+CJCEjoGi0JJ88
      EW2CmZSZE8i76jzkcAT7tLHse/CZzildsLYJ985Spn/0NH+/6g9c/eTtBCP9VJf4AXDmxHlc
      OP2MLsc6O0Cj/8TP8A/GAngibgxOhbbVWzA4UtA40lCPxPsZADw+hS3TL0ONyQy59mKipWX4
      d+1DjcYQjQas0ycg25Jo2LCXpqVrCLe0Ewa0iVZQFFRFwVKYTcchWpr+qnp23nY/LZ+v6hJf
      MKbYSJk9hcJfXIRQWoz/y6NYTGo0tNU5ibS7iLRDxo0XkXzthTS+/kFcAExV0aUm4/jJQjKv
      vxiNxUzhb67GtWU37i2HjPiiSOrCWXgb2gi3OdFYTCSOH0HHhp0EKuvJu+Z8ws2t3Wyooi4P
      DYuXMf7uG/jDhbfyf28+dkJOo4dnD+Ivl97RzVj7kBHgx8HrqN6/g46fv4Bvfw2CJFE4KYsM
      87G5t5iRRWtZC5H2+Dw64A2Rdt5CYopIqL4J04jBJJ+zgB33PoO3pBLbqMGEGlox5WYw6i+3
      svN3jxF1e0mfPRGiURo+izd4oyOZliXduTaKy03h9ReSNGEEsbx0nK8tItYPxumhsMydiV2f
      guvfbyFqNaTMnEjG6TPJuOoCou1OVFVFm5xIuLyKlmdeIVBchhIKY89KxCANR0jPQGdPIhqM
      UPXmZ6gxmfzrLkBnNVP+rzc69yWaPl+NdURRj3WIeuK+DBfNPJsGZ/MJR5Fw2Ow8e+PfsJoS
      up3r7ADO8I8jy79iyVI0BxZqqizTUOEmfWoiQuDI5hhHQiBtEL5d9WgSTIiSiOuTL3H+b/HB
      8/traPloObqsDIb8+kqCDS34ymvJu+ocEgqzsY/Mp/WL1ey76xEQBBLsNnJ/cQmyL0637gkd
      a7eRNHk0mpRkHHffTtMf7kfpjQZxGLT5uehmz8FSWU/OGTNIPmkCaXOnAPGFq86RguzzU3ff
      Y3S8/1mP0zmNx0nmZXdQ/Nz7nbTphg+WI2mlLptywdpGTLkZIIldVL8FSSR19mSCtU10rN/O
      JWIe4XELeWnH5yeEX0B2Sgb/vfVRMpPTejzf2QEicv+jEIqiEPKGMdm6K8rIURlXk5uUnJ4T
      rRVZwdXkITkrscfzR4Js06IRhYMxb52BpqCFdHzfySxCM2wE+z7fiXv3fvKvPR/q63F9s6nH
      snJ9I2p7O3XvxRPuy59+C+/qTbjWHaLSoKoobg/N73yGfcHM3h+squx/9EVav1yHxmLEOmIM
      mv0lKK6+Ga2awnzcspHKm+7t9E12fbUe9/ptDHv4TvSOFJRgiMpb78HXh39atLmVql/9Cf3Q
      EXDgvdpPnohzTfe1UvK0sSSOH0b1S4uRAyEkk4H86y4k0tLO6ptdEqm5AAAgAElEQVTv65we
      TbKaURYO43WllNgP6BswImcwz/7ir2T00vjhkA4QVfofx1ViCh31LsKBCA2lzZgSDAS9YYac
      VEhrVTvOBheRUJT2WidJmYm4mz3ozXrCgTD23GTczV6ayltJTLPSXNHKiNlD0Jv6FwVJmjuB
      xHNFWlduQJecyKDbLqf8+XewDMkmwXuU6xhbErFZZ5Kq7kBVwTY4h+pFH/Z5SftnX2HOy8BX
      UYfeYsC1YXuP5YKVdSj+IJLRgHyYepug1VD36geEDvEM6wAyTj+JtLnp+L9ejXxoNpkoos3J
      Qs7KI6hItB1ivwRxcmDb0tXsE0VGPXMfTc++2mfj77wuEkWqKCP/koVoHXYKr7+Qkgefo27R
      QS0lyWRAo9eiyDJZZ83GWJBN2llzQVZYt+C6LublssfPlI/LGf/ML7l3xX9x+r5/07yzJ8/n
      vkvuIMHY9/y4swNIgtRXuW5wNbmRYzKmBAOqqtJR7yQSiNBa3U4kGH8ZeWOyqS9pwmQz4mp0
      01bnxJJsJuyP0FTegslqIOgJEXAF+t0BNEYTktGAoNNhzEqj4dNVePaUs32fxOTrZmOo3j0g
      B8WQoqN4RS3BD34fX1PceDFarXREcp0SCDLx1bsRLRbal62m4pH/9Fo20trB2OfuY/ftD3Ua
      Z+scySQMKaBjdfcvbePna8n7zYtoZs/GuXwtrvXbsAzOxzx2OGUvf0LaiFRa3uy9g7YtX0vH
      inW0vdp/zy7FH0DZs4fG5X6qXv6Akffdgi7ZSuvXmxAEgVhzGxV/f+Fg5EqrQfH6EYyGLo3/
      W8iBIKOa4KO7X+SBd59i6bZV38viOM1m5+6f3MoZE+b2aZD9LTo7gEHTf4E8SSuRNzYbvVlP
      JBjFmKDHUWjHaDUwYtZgRI1ELBJDo5PIHZ1F8TdlZI/IZNC0QgxmHZlD0ykYn4POpMOem4w5
      sX/6NgAav0zT56uJtLtoPWAlCvH1gDp+BuLYMUSXfIAY8vY5JVIEiRanQKtXQ9AT7rxH+TNv
      kXPWrH7VpemzVfjqW9Fp+/54SCYDqafOYMZXr+HeugdBoyFxwgh23vKXXq+pfHYRtR+vIhYM
      YR1RRPOSDaQrGvx1TQSr6lGCvU9Z1WiMxpcWdc8VOALUlmbCrRFUWcG5dS9jH72ToaEwu2/9
      Cy2HKU+o0RjVz7+N8RBz8MOhhCOkJzl48mf3sXL3Op789L8U15Ydl26QYDRz8cxz+NkpF2O3
      9l/nqLMDJOhs/b5IEAQSUuKbTDpDnAxlSYoPNRqdpstxk83IxLO6CylpkuKNXqsfmMKA1ZiM
      X3+QgJV/1dkEisuRy/bT8OA/kf0BREnEaJGwZlhIKEhDCPpBlhHMFtQkO0372/EqJkwnDSHw
      0mF+XYrS2an6fAcaDRWvfkzUG8CUlYrGoO+5wYkC1vEjqHriZTpWb0EJhbEML0JvT0TU9N5x
      Qs1tyMEQAvH8A1NOBsN+dx2jH/wl7vXb2bliTZ/1iza2DFj1TELFNiwfWVYpuOZ8BEEg3NJO
      24oNPV+gKERaegmeiCLJMycc+KvIKWNmMGvkVFbuWst/ly9ia8XuY7JITklI4sLpZ3D5rPN6
      Xej2hc7Wl2oY+MU/BNLsuaQ/eQ877nwEx5zJpE8aTs2yFYhyFNkTH4oVWcHfEcPfEcZnyGTw
      U4+jdaSAIODes5+KC37NxH//EcfcKfh27aPtkJxXQZLIveEiYnX1+HaX9VYNHOefira2jba1
      20k/YzaWVBuV/3ylWwK6bdxw6l9+n0DFwb0Kz/Zimj9egXXSqMNvG6+DVkPOFefgq29FMhkp
      uPZ86j/+6oCePZgH56OxJRDrha4hGvUkDC/C3zqw0LYgiehSErGOGYrenogSixFuaOnGDToU
      ktlI9jmnUPfGxwenjZLIoNuvJWHEoC5ltZKGBeNmcerYk6loruGLbV+zYtcayhqqCER6d87s
      8tsEkYwkB+MLR7Fg3CzmjJqGUWcY0O/s8pu/TYms81Xzxr7nj/pG3wcMkpFbxtzF/sdfZ9/j
      r5J/wTyia9Z3SwA5HMkL5zD4qXsRJAlVUQg1d2BwJIEo4iutYsvP7sG/vxbRqGfQL69k0K+u
      wl9aya6rftujqbV14ihGv/J3ECUCdU2Ys9MIVtVT9+pi2ldtQlVUdMmJpJ0zF+c3W+j4pmc/
      X43VgqEwB9chuv2CRsI6aTRtG/fETT5Sk5j52bP4S6sof+p1glX16BzJSAIE9lX0uFaxThlL
      +uwJtD/3yoDer2RPITZyLG0r1yOHI5gLc8j/2YXsu/uJXnWRLMOLmPzBv6l+4R3qF32GJsFM
      4S+vIu3sOZ0ONH1BVVWcPjcVzdWU1JVT39FEq6eDQDiIoioYtHpsZitpiXYKHDkMySwkKzkd
      wwEJnO+Kzg4gKzJP7XyQ8ADCod83imxDubDoSipeeJfih18kKUGL5D5yArygkRjx9r9JGD8S
      iM/1Q3tK8C1fRbh4HzGni5DTi2nEEJLPW4hp+hREo4FwUys1z/yP9qWriXl96DMdOM49laxr
      LkBjNsWlR5atofzBpwl+K8kugHlYEUP+egc6RwobTrm603C6Jwz6v1uQbAmUP/l6PH8gLRXn
      1mLa1x4MqWYsPBnn2i3Ih5hnC5JI4shBhOubOkcCUa/DNGIwrtpWkkYPRr97yxEz2w5FSNDR
      0d71S6xJMGPJScdf0nOSUNYV5xCqrMO1YUenBqs+00HRXTeQ/pPT+rUQ/SHRmRMsCiLtoTZa
      gkdPyz3eOCljDmmmTJLGDSfn/FNwf/hFl0bRKxQVnSMF27TxRJtaaLn/Edr+/R9CO3YRa2xG
      cbkRQ0Hk2jp8X35NYPU6dPl56AcXkDJnKrLJjCY1BW9VE6F2F8bcDEy5mbR8tJziW/5MtL1r
      J4y2OWn9ZAVaRwrtK9b3GVEyDy4g6AlQv2Q1mkQbHdtLiHl8XcR6ZbenOztVVdGl2Zn0zpNo
      HCmEg1HMo4dT/+UGHHMmM/rh2xFQCWzrJdf3MIgmI+6Yhthhi2slEiX93PmooXBnBCt+gUjK
      7Cn4dpfi3bWvy2+UvX7aVqwjYUQRpqLcE7oTdBmjRiSduKq/OlFPkW0YEP/6aQy6XufAPSFc
      30ykqoaGX96Fb+U3vTsqqirh0nIa7rgH37KvUIknkFQ+uwjP7jJaV2xg8+W/o33NVsrvfbJX
      0SnZH6TuubeOqPysS0sh1NIOioocDDH7i+eZ8eFTZF0wH8vgXAb/5irMuek9XhtuaSfi9ePa
      V0Pz2u2okoQhw07aKdMwZqSSfvM1mCeMPuK7ETQasv/vdgRjz9E4X00jMZOZ3JsuJf2CU8m6
      7GzGvHA/KbMmEezFDFGNRKl66rVeVelOFHT538mzFuEw9vyyf2iMTpmAUXPwP0jQaXtN5O4J
      ogBNf36ISGV3f7CeoPj8tDz0BL71W2j4oKtBhhwMUXz3Y0Rae5AtOQSR5jb06fbe62TQE3H7
      iNQ2oEswxlUlbBaMWWlMfP4+5q17k+H3/ALrmKE9Xh92elh12i/iIcuHbqdj0y6G/PIKci87
      EwDJbKLgmYdIOvvUOGW7B2jsyeQ99meSz1nQLeUU4h8byWKmbcNOtBlp6IvyMA4vImnqWDzb
      9vZwx4Pwl1V3HTVOQHSRRREEAaPGzD5n/4bN7ws6Uc9caTrtby6l4e0leHaUoE+zEywpJ9xP
      cwmz3Ux0b/8kwL+FGo4Qrqyhtbyl2zRGjEUR+iGYm3/blfjLapAPM9kQtBoEk5GWlRvjArWx
      GO2rNpE6byraRCuVT7/J7t8+TMU/X0UJhom6vF1kEyWzEW2qnVCrEzkYZugvr8C/Zz9SLEy0
      uQVBFNGlJCEZDdjmz8I6cwpKTCbU3IYqSljGj8Jx1U/JfeAujMMHIwgCiZNG4dlVSuCA0K5k
      NjLs3tsY9vufkzR6MHv/7ylalq2jZfl62tftQCMKBHtR64C4k3z21eejsR5jG6BjiG5B+CGJ
      w8mxFFDrO7bujd8FuVuilD76W2Keg4S3qn+/QcqE4d3IWT3BkJcFbd2jOf1BdH85SUNy6Ciu
      6jwmaDWknT2P1kWfHPH65DlTsU4dy66b/4IaDIKioLUnkX7BAkoe6rp7HHV72f/4KxjSkqn5
      78H9iXBTG6JeR9qZs+O0Z5cXb00ToqTBfvJE9CYdZbc/QKi6ntAGlda3P0XU67CfMYeiP9+G
      NjmRSEShdn0x/to4LcFvdZE6YjhSQrxxqopCrKmFrBmj0TrbiLp92E85idSpoxFEkfZ127sY
      C7q27MG0oPuIcShM+dno+ki+ORHQbYIqChILcs9GI5wY2f7mDpWEh1d3afwQn2O2bdyFLje7
      1+EdQJNoJev6nyK3HSXbNRaj6KfzyLv2fEwF2SROGsnIB39D2679iMa+48/GolxMRbk0fL6W
      tv31GCaNRU6x017RRPv20h6da9rXbqP21e40ByUcwVyQw7D7f40mLZWoJ4C/qp6cs04mvH0X
      waq6LqOUEo7Qsngp+27/K+GmVnbcfB++4rhStBqN4d0bT3aPun3E3F5q7n2c4p/eSOO/XkGu
      qkF0dtDx7ieUXHQT1X98BMV/WLBBELAvmIkhp2eHH0EjkXfL5Qi6E6Md9YYeleFMWgsGyUCF
      p/eNoO8DOlHPhI9jKJt7GY1UMA4bRObFZxLYV9HVKlSSsIwZRtFj96DVS/iWruj5Hv2AoTCP
      /PtuJ/fKcwi3Oql88T2UQBC9I7krWe1QSCKGUcOpfP1TfPurkUxGUqaOoWnpOuRgCK3NQrSt
      o5sOkMZsRPH3vCkUaumg9Nl3CDa0YspJxz5tLKFtuwj34A3wLYLVDYSa22lf110fNOb2Yh01
      mJZ//ZeOT1b0zKGSFQJ7yxCCQSKqSCwQipuRZNhp/noL0UgMU3oKMY+/swNqUxIpuvtGMi5a
      2K+9gB8SvfIQxqVOoT3UytbWng0ejjcEBBbknkO0/g362pkI1DSQees/sF94Op4N2wmWVeEp
      qUSXl0XeLy5Bl2bHt3zgdj6HQpVlBEGg9atNlD76UqfGZrhZi2PqOAI79naJt2tTk0laMIv9
      r3zUGSUquP4ndGzcRerJE0GAYb+7jsbFy6g6RJNTm2gl99oLqXjsxR6VaTQJZoyZAtbhhUx4
      6g9EW9vZeub1fVdeUXCt7nkjDqD5lXeJ7el7MQsQq62n4PyF6MaORmM107pqC5X/XQyiwJi/
      34HOYiJQWYs2MQHb5DEYstJO6PDnt+i1A4iCyLzsM4ipMXa29f4Cjxfm55zNyJRx7Enqe56t
      S7IhCAL6zDTs557K3nv/TeVna1BlheZ1u5j65qNoHN9Nwk/jiEdyXNuLOxs/xGPkvjYPpqkT
      UVzuuDpcMIJpaAE1S9Z0CZFG2pxoE62IooBo0IGi4Dh9Fm1rd2BITSTc3IYxw4EaiWIelI+/
      rKpLHUSjgWhUxpSfycRn/g+NyUCoogYlfOSFuNaWgOQNddszkYx6YhVV/ZaB8q1az8i7b0ab
      ZMMyKA9PSSXGTAf22ZPj+cNzpvTvRicQ+hyfJFFiQe45THRMR/hO6Sb9h1bUcmb+TxifGn+Z
      jjNn91necdaczr9HOtzUvPlZZyN1btlD+5qt6PJzkZKOLgEHQcA4Lr4/kjh2WKcWKIBo0OE4
      ZRqNS9fRvHEPssFI1hXnkHnuPIb/9mpsIwoRJBFDup2iWy7FMXsSjZ9+Tf17y9hw5e/Zedfj
      dGwrQWdPJljdSMuytZT/81X8tY2YB+ehsVoQ9Tq0KYnYF85CNBmRg+FOEp0m0YqoP/IcO2HE
      IIbecyOS+SDjV7KYyD5vXu8ivD0g1u4kcMBz2DqsgBmLn2TiM39Cm3CMclJ/AByRiikJEvOy
      zyDFkMrKus+JKgOX7+svbLokzir4CdmW/M5j9vkzSD//1O4WRkDilDFkX31B579FrRbJqCf6
      7bRcEKh7bxmtq7diGzwEeePGAddJm52Fr81L/YPPoKrgmDsF994KRK2GwpsuIWF4IRUvvIsq
      K2TNm4RV9RH6cBWaphbybWGCw5JImDgKQzRAuPFgJCrmD1J048U4txbTsWZrFxM7JRhGl2Zn
      yvtPocZkdtz1BDVvL2X4PTcw6JZLOwVq9ZlpJIwZ1jUT7XCIAikLZuI4dz6Jk0bRvmoTIGCf
      PZloRRWVny4d0PuINB34DYLQJ5v1x4IBeYS1h1r5suZjqrxH553bG0RERtsnMjtrQZfNrm+h
      RGPUvbKYhjc/IdTQgjbZRtrZc8m/9Uo0h3jlqqpK/btL2fuXp4kFQuiSrPir4gvElNFFZGq8
      3Q3g+oIg4tEn0V7Z3JmCKWg0ZF16JoP/dHP82Sq4tuzG9eY7iHt2onp72Z0WRYScXCr3tRMK
      yQz+1ZUU/eIiIh1uVp10KZGOrllTxuw0Zq58hWiHm6qXFtP89RbGPnYnyZNGdinn3rSTXVfd
      2W2f4Vskz53GiOceQOohYuVavpr9N/6h/+8DKPzHvSSfOW9A15zIGFAHgLiAVpmrmHWNX9Ec
      7D360B+IiAwyFzEtaRoOTQqCLKN+GxURRQSNBnR6BL0eNFqQFZRIBEGrRdT2PHipqkrU5UEO
      Rah//0v2/PlfANhnjGfMrT+h5YEeQno9Vk4knJBCQ3FDtzmyIImMfuY+0s+eixIM0v7wE/iX
      reiXRLtgtWL/412YZkxFEATkcIR1Z96I54AzzLcwD8rFnJOGa+Mu1GgMjc1C7vU/peDmyxB0
      Wpzrd7D/n68SrG6ASATR70MJBDvrIOp12E+fRdG9v+o1Fh9uaGbPaVf0O3FG0OsY+clLGPJz
      +lX+x4AB+12KgsjQpJEMShxGo7+WHW2bqXCXEoj1/AU6HAICyboUhmhyGarLwy4lQRDA020t
      ph76p06HYE5AtCQgSL0PvYIgoEuKJ/fkXXEWvr37ca1cgz3Thm9PGbopUwhv3ITq772+gtFA
      0lWXsv/9VaB27+SqrND88QrSzpiF64WX8S9d3sNdeobq8dDx98fRPfkomrwc1GiMrIsX4iut
      6myIktFAtLWdjkM8u6IdbsofeRFJr8M2ZQwbL7m9S1aY1mZh+H2/RgkEkExGEsaPwJyZgrx7
      E8HK/SgdbaDICEYzYmY2mhFj0BUNxTpzMq4vV/er7tZpE9BnZx654I8IR22ULQkS2ZZ8si35
      qKpKS7CRJn89baEWPBE3YTmIrMpoRR0GyUiiPpkUvZ0MxYotJA5MBx8gEkGNtKO6nQi2RARr
      Yp9hNiUSpf2N9xA3riVRDRD86huCX30DHEj8sJowpqUgO12o0QiqrCLarCh2B/VlLQT2txH1
      9j5SxNw+Qtt24n3/o4H9DkBua6fj6ecxXnMNm677U9xPYEQhyWOHorFZkHRaKv/RA5dfVal5
      6X0MX23qlhIZdfsIdngYfMe1yLVVhBe/hX/nlp7f89YNRD55DyHZTur48fi2HFlTVJOcSNYd
      P0f4/2Defyi+k1P8txAEgTRTJmmmXr4OqooajcS1OCNhvpOeuaKgOjtQA37EFAdCD5qaSjBE
      1R334lm5tufqyAphpw8hxU7+C/+geelaih96EaXRiSYFAtWNuOs+JnV0z0JQAAmjh+B9dzFq
      5OiCAqGNm6mvdOE7oHHkLathyht/x+BIYf8jL/Z6XbTDhRzr+f2FGloIf/4h4cVv9ctrQO1o
      g/XLyBhkpKk0RtTd86ioy3CQ9+DvMA4b1OP5HzOOSQfoC6qqQiiI0to88K9+XwiHUZrqEVPT
      utB4VVWl8cn/9Nr4D0VofxUN//gPtSXNhINRIIqiONElWbGOHMSQO69h58//RPSwjDNDdhqZ
      58yh43d3H3X11UgUoeHgFEfQSNS/uxRBo4mvfXqBaDSQNG0swfe6R2+MdXsIvz2wSJcAGPQx
      csYm4kueimfnfiJNcXU6rSOFxHkzcFx1IbrMH8fG1kBx3DsAwQBKS9ORyx0NFAWlpQkxNb1T
      KTpcVUvb//rv8uJZuQbJdpACnnX+KYy495a4XapOy/jXHqbsr8/h3VuOKstYxw5j+AO/RhsL
      oRyIvIhJiShuD4JGc8QRQUq1I7fGfQtSR+bjNqTgr6hD0uvY/ad/IQigT01Cl2wj2tF9WmIs
      yEHVakGSulAXktKN2A0+OIr9GkEQ0KgRkjVtZL31JEoMQEWyJgyIcv5jRJ8+wd8Vajh0/Br/
      oc8JBhAMJgSNhrZFH+Jb27OiW2+wz5iA49JzccydyuDfXIXGbEDUaBFEAUNmGo6Fs/CUVOIp
      riTY0kHE5cWWnUJwZVzv0zxvNqqiIKXa0Q0ZhKDVICZYkOwpSAkJ6IcPRTAY0A0qRLJYEExG
      FKcLbVoqptNORTToibo8RA/Mw+VAiCF3Xkegqr6TBChoJBJGDaVjdznOrcUoiop9xngyz59P
      zmmTyRJqj5R7c+T36PdBwI9+5mwks+n/u/l+TzhuI4Aqyyit3Xn0xwWKgtLWgpiRRbB44AS+
      SE0tQ5+8n/ZVG9n7m78RamjBmJtB9lXnkTR9HFUvvEPjhwfIdJEo9YuWQH0diQKgQrS2Dm1W
      VrzBaLUILje6nOy480tNHaLNhj45ieDGLRgmjkcJxxewgkFP2pzJWPIzqZVl/AfWAxqrhewr
      zibr4oV0rNpM2zebMWRnoMtIpeVXf+ust8aezNB7biT49CPEjpHaTnTdKnSnnYOU9f9PqLMv
      HJ8OoKqoLid8n7Y50Qiq29mVEdpPKMEQda99QMmf/tmZwufetpeWL75hxN9/R9OSb7pd4yyt
      JdGuhUiESEUVQmUVCCLa3GyilVXIzfHOr/j8cVeW1lZkj5fA6nWddApXdStb5l2DHAxjyssk
      45y41GDRLZeiS7QihyM0LV9P3XtLQVEx5mbEWaRuX1w9YmgBcmMDsW0DG/H6hBwjsmIJxitv
      OHb3PIFxXDqAGo2i+o6NdemAnutx9+l+0ut1okT5Iy92y19VQhHK/vYcUkr3e2oz0tAXmAnv
      3ovq93d+f8N74llncuAgpTmy76DxhRo78K0WBNoqmpEPhDMD1Q2Mfuh2AlX1VL74Lt59lRiz
      0qh7b1nnLnSwppGcy8/COiruQrPngecwtlWQeCyDC0BsxxbUy5UTnsp8LHB8OoDX/f1Mfbo9
      WMUycjAdiz8f2GWWBCLtPZsDhhtbybvwNDx7yw92EFGk8JbLSDCo8QZ/FL9VW1SA6NRA484D
      9xSoffNTGj7+ClSV+g9WkDZ/erfIWczjJ9LmRJVlht1xDdZgBQzMUuCIUDvaUL0eBNtREgh/
      RDjmHUBVFFTfd9fqP1okTB2LviCHcGX/XGOkxP/X3rnFRnFecfz3zczO2nvD3jG+rm3WMo7N
      LYAxJARIK5TSNk1CVFSlqdLwQIXUtCoNUksqlaapmoeqF6kXqVGiVK2aBOWpFZDmIYkDAofE
      gQRDQs3FOK5tbGC9uza+rne+PgwGbLzGNrs2Zuf3YtnW7ljr7z/fmfOd8z8+/I9/nfa6xPPR
      cjaswtiwinN/eg1zOG65NGdn4bpvKZnv1NJfl8A6MAFSVQmr84gP96B5XEjTJH/TOgYvh6+L
      yTSJ9/fjLgvQ22Q5Lyi6g8536mjfa02Sya5eTN79N+xOmS7UYDnxc6dhcIwTtdeHUlqG2XzO
      ClF7J/4fya7LYAtgGgz0W5MZZwlFUwnseobzO56/9fOAEBT99Ae4Vq9EN7IYCt1cKKfn+mn8
      4+sMhiKYsWF0n5vQkQbCDWcofORLDJwJU5Cbh7w4SRtCTaM7M4fmvR8A4C4LsOrlX3L0mV+T
      s2Yplw8dtWo/hCC7egnUCEKHPkHG47jLS2h98/ruFj15hsFgkBGPNMWXhVA1hK6jVa/BjEYQ
      LjdmeyuYcczmcyiFxTA0iLJkBWZvz9UzB4GMxRCaynDDMUsgc2js6e2Q9DSo7Om56e4z0+gl
      ATJXLKPn4IcJndGEUyfwsx9hbHkY1etG87gIHagfFXIoGTrlz22n7a1D9La0U/PKCwx2XCZy
      vBHN6yL0wXGutHSQv/0pHCKO2Tlx473qz8Z49od0ReNEG6znAiEEw739+BaXU7VrG4qqgqKQ
      /5UH6D7VRMvr+xnqihLrG0SaknhP7zU7cmeeQUl1CaL7qj2LQ0Px56AYOSi5+QgpiZ8+hcjI
      BCRqadCq/1dVlMIADPSBpluFh9IEzYHZYbk86JseRfFN3jB5rjLlatCJkFJidrTPugDIdKHk
      5jMcCnPxb3vofu8wsc5LSFOiGVl419aQt+1J9JKia6eb0pSEDn5E6z/3MjiSBn16M9n3LefK
      2RZi0Stkr6wi3jfApYNH8VUGaX/rIJFPTtF7vo2+5laKairIC/gYOPk5YmjIaqV06uD20h0e
      oFdzoxoGnsoy2t4+TCx6hcpd2+hubMZfs4Tibz5klXT/u5aG5/6A5nTQ32rtLAt//F2CWx8n
      fOxzmv66B6FpVOzcivdSI0P7b3C4FsIKo0a+3sg4P1MXVoKiEm+8IQTUHHj//I9xy0zuNpIv
      gLaWxK5rM4XDgVpUcu1bMxbDvNIHUqK4M1GciY1VpWlaC1fVEMqtT1Xb/vUuH2/bbV0220fO
      2hVE6hsIPvk1LtZ+hLGumsiHx4l8+t/rLxKC/Mc2sujFZ9H986wONsG1rEu8f5DeL9oI15+k
      8Xd/x1NezMq//JyMPAMppdVqKa6ONf3sOH2//9U0P6jxURctw7Vz911Z+jCW5D8DjJOSi8dN
      3qurI1hcTPmC0jG/i/P2gQMsXljBguLEw5ZD4TBG9iRTnKZ5/S6I1SmmZE9uOxeKMqX0n6+q
      DD3bx1C4G1dJAZ3vHiHeP0jHkc/wrbqXyImzoxc/gJR07qsl8O2HyXlw9ag2S7B6dX2VZXjv
      CVK4eSOqU7/WBSaEQNzQC6FWVCGM+chQ8lJBjtXr0mLxQyoEMM5+Yppxoj09aKrKm/v249R1
      QpEIeYbBQxvWc+HiJUqLArzyxh6WL15Ebd0RqhaWE45GKc2nzO8AAANLSURBVCksRFEEqqrS
      1PI/SouKuBgKkWsYhMJhgiXF3FtVNc6fIWekj9lTsYD1/3mJnjNf4F+9lMbfvMqlQ8co+94W
      Ch/9Msee+sm4r5PDcSL1J8h5MHEjuRDilv22Qnfi/OpjDLyWeETTVFByC3DUrE3Ke80Fki8A
      RcAYexkJeNxuGpua6IpEmG/4WVZZiWmaCKB6yRJKCgvQ1BrOtbSgKAIjO4tgcYBQOIKiKKiK
      SnFBAV2RCJqqol2tU1HHu1sLMWNN/EIIPOUleMqtkGvpizswYzEUp44QYlQj+lhU9+RHQ02E
      Y/1Ghurexzx/9vbeSFFwPrEVkTn5cVlzneQ/A1xohWnWyCcN3YlamDicmkk69tVyfPvuUXYq
      AJrPzZq9L+G9J5iU68QvtNH32+eR4YkNeydCf2QLzs1PpE34A7ewRZkqVnw6+5mDOyl7kbtp
      PcHvf2dUWbEjy0fVCzvwVCxI2nXUgiJcO3+ByJnGqCtVRf9G+i1+SPIOAGB2R61TxFlEGDko
      3jsnhy3jcbpPnCby8UkU3YF/XTWuYCAli83sjjLwxqsM19dNqgFJySvA+a2n0ZavSrvFDykQ
      gIwNYbZNrgwhVSiB0gm7qu52pJSYzWcZOvw+w5/WI7vGGAOrGurCShz3b8Cx+gGEc/pD5uY6
      yReAlJid7TAwS4dhmZkouQVpeTcbDxkfRkYjmF0hGI4h3B6U+XngzLA/I1IgALA6i8wpjuhM
      FkpuPsI1d636bGaW1BR8u9yQpDGWUyIjI+GcKxub8UiJAIQQKEbi2VgpQQiUbGPCYRk2NmNJ
      XcuP7kRk+VP29mMRWf60fpizmR4pE4AQwuoocqd+QJrweBFpULprk3xS2vRphULzEa7UiUB4
      vAhjvp3RsJkWKckCjUVKiYx0IaNTsCafBCLLb/mE2ovfZprMiABGkP19lkvxJObrTohDR/Eb
      dsbH5raZUQHA1YaT3h5kNDp13yCHA+GdZ4U9aWDZYZN6ZlwAI0jThKFBZF8vcmDAcjMer4VP
      1xHOTMv70z69tEkysyaAm5DSGhw94ighFFBVe8HbpJQ7RwA2NrOAHUjbpDW2AGzSGlsANmmN
      LQCbtMYWgE1aYwvAJq2xBWCT1vwfrROPHQDCWqQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABBNAAAQTQFnjAHg
      AAAgAElEQVR4nOy9Z4Bk11mg/dxUt3Kuzrl7ctDMaEbJVrIsBzmDbcCkxYTPxhiDYU1YgoHF
      ZtnFwAdego1Zr8EBJEcFK4ylGUmTc+zcXZ2rqivnqhv2R49Gak0edfd0z9TzZ6ZveO+5t+57
      z5vOOYJpmiY1atyiiDe6ATVq3EhqClDjlqamADVuaWoKUOOWpqYANW5p5inAUH8fGmDoeUZH
      Zy56gqGV6esfvCrhpmlysSDT0PAwAHopy4+e38WB/fuYmk1fY9Nr1HjjzFOA0cHB8wowPh6j
      Wspz/NgJihWNZCJBKh4hmasQqgsxGR7i0KFDTEYS5FJxTpw+i2aYJGZnGeo7QzSR4cjzj/PY
      07tIZguMDvbRNxTGNE1Gw2EAjHIWTXGz444dnD52mFI+w7GjR0lmi6RTSdLJWaKJDKODvQyF
      J6kFbGssNPMUwNRLHD18mCNHTqJhsnv3S6xZu4oXd73IiYN7GInl8NpEjp/upbmtC0nLY5g6
      Lx88QU9riBf3HGT/y7sJNndw7PBBmpvbWLdxM16HhWK5TO/B3QzOZOY1YHy4n50/fIJQaw/l
      UhHD0HjiyafoO3mQ0yMRvHKWk6MpAm7Hkj6YGrcG8xRAkKxsvf12tm3bhIyJKFtQVRVJNBEt
      Dtav7UYQ5o6dCfeiu1poDjiwWG1Y7S5MrYzV6cHjtCOJIqIoYOgG2ViY2YKFbZvXUi5X5zWg
      tWs1D73j3cyM9nLoyBHWbtxC0GMHRWXjujUozkZuX13H7pdfpqobS/ZgatwayK/9o3vNGmRA
      lBx0dDRiV/wcPHSY9Zu3oRXSyIAgWehqb2VycgRBtjIV99DT7Ofw0RNs276D9Oyc79Dd3UWg
      uY7wkeNoa9ZhM3uZLYi0NNtxCl0AiFY3qjFnSm3augOpnOTMqZM0tnQQ8tlRFRFDKzETS9DW
      3oUiCUv9fGrc5Ai1UogatzK1MGiNW5qaAtS4pVkxClCpVDCMmhNcY2FZMQpQrVYvmlSrUeON
      sGIUoEaNxaCmADVuaWoKUOOW5nwizDRNcrncjWzLZSmVSmiahiiKmKaJICxcUqwm79aVd0Ei
      zDQMypUKFlVFfN1JpmFgAoIgcrXtM3SdSlVDVS3zGlEoFLDb7Vd9E/l8HqvViiRJaJqGLMtX
      PukquR55B89O8o2dpy66b0tXgJ97ZPtCNA24vvbV5F2dvAu2lhJhTkxVaW8MYJFFqoUs5UqF
      dKFKnc9JMplBdPkJeuyY5TKzyQROhwNNUGhvbrjgArHxISaSOfzBeoq5HHVBH7PJDIqi4HE6
      KBWzKFYnqXgcn99LvmxgFSsYso1CKkFTRw8Oq7JgD2OhyBQqDE0lL7qvJWBb4tbUuF4uqhaq
      aiWXSVGuVLEqCg0eGdkbJD0+ht0bwOp2MjsbRS+WsPt8RKbCCFbvRRUAQFYU0vFZAgEfwxMz
      NPicxBIJqpqBLGjYrBVmI9PoikIpV6JaiOPwhRDKeTL58rJUgMshiDXXaqVwgQKo3iY2+FSM
      So5UroLP7USSTCxI+FetQlIUMpksAbcLa2MTiiJT53WSL188Ru+rb6Yip2hoqCeZSHL7pgbi
      ySwbm1rAMKhWSuiI9KzbgNNpo1jWscnNVEyJajGPz3v1ZtJSIksCdvXiiimLtaK9lcKKKYZb
      bj7A5SgWi9hsC2cGLff7XcnyFu4ql8A0TcrlMrpu4HC8+jXXdR1Jkhb78jeEI4Mx/vOFMwsm
      zzS56qDDYsl708ZWPvTghoVrxDJh0RUgGZkkUTAoFzOIkoX6kI9EtoRTlSkVsgiSBVNW6Whp
      XOymLBmZQoWR6dSNbsaCsqY1eKObsCgsurem6zoujxvV5iDgtBCdjRMeG6dcrqALEi67hXg8
      wYqww2rcdCx6DxBsaiUWjdHU1IRFFLCXi9Q1NOO0qQCYepUOi5ObyW2UJQGnzbKAEk1Y0Cd0
      7fJUy81prtacYBbe6brWJN+VWO73u5LlLXoPYOgahVIZu91+QWbZ0HUEUUQQBPKFAg67/aZw
      jg/1R3l019kFk3ep7/W69hAff//CZZxvRRZdARIzo0xkBJpCXiRRoJhJUjVMcsUqQZ8bEwHN
      FElExvCGWlAVk3Q8icsfpJBJY7PbyOTLNDevHCc5X9YIRxZ/oi+/u5ZxfqMsuhMsCAJOh4NM
      Ksn0TJSKLuC0yQQCfrLZHJpuMBtP4A3UI+hVyuUSNoePcnoGweomn82QS8Ypa7XRYDUWnkXv
      ATyhVryShUoxS7Fq4rRbEQUwEQn4vBi6htvjxW59rdMogOnjxNFjBJo66Ag1YFdWjllkkSXc
      dnUBJV7cCFppJSLLkZoTzMI7XaVSCavVumDylvv9rmR5i94DVMpFSmUNu8OBLInk83kcDsf5
      fxeK//+x/fSPx6/r3IXOtG7rCfLRd9+xcAJrLBpLoABlBgaGaGttIZUvU8nGUV0BFMEkHp1G
      sTpIpdJ0rVqFKl+/mRNL5hmPZq584BLQ1eC60U2ocZUsuhPsdHsJBgPk0glGw2OoVgdapQwY
      jIXHSCTTFDJJ8iVtsZuyZAg3VVrv5mbRewCApqZmtEoJX30rsqmBYkVVJAJ+H0gWysUQXvsb
      y5w67Spe5/Xa3QubabXepFnTm5HzTvBKGBNssVgQRXHBk2ULLa9SqWCxLFwpxHK/35Us78Ix
      waZJIZ9DtTmIR6ZQrDZMwYLf57rub+TFXohSMY8gq1hk+aoc0JUUBdp9PMw3LzFe+Hp4o/2T
      02bhLz/+8Pm/l/vzu6FRoOzsDLGChlGZZmY6giSJ1NU1YeoFMoUqQqWAw19Pnd9zVRc3qkUO
      HTrOhg2rmRifwetzkkwXcTtkRNmO3WZhNpFBFTUqWLCKVWSrk3QiidvrpqwLdLY2vbEnsMTk
      S1UmZ7M3uhnnWdicxM3FBU6waZooFguCJNPW1kFzcwt2RSSdzeNz2QmPjZFKX320JTY9hSSZ
      jIxPY7NZiceT2KwqxXKFSrnMbDzG2OgYmmhBkaBU0dBLGSKxKNl8mVh0tlYqXWPRuKAHcIca
      MZMJHHUdYOjAXPcriJDNlbh9+3Zky9VXOvoa26hr7SIenSRftdBklyjLHup9zZgm6FqF+voW
      bDYVAdAqZUxJwe4KYLfbKGvGioupqLK4sHU6bzBR4VrQ0uybi1ommFo59K0s74KtxUyS0eko
      bW1d2CwCmq5TqWhYFImKbpJJJnC53agWGQMZvVpCtc1leS9FuVxGVefs0Juh3PlKHOiL8M2d
      p6/pnM4mH7/zkTctUotqXIoL1UKYq+EfHRujxSUxlC7jwSBvgiKIWO0q1XiC6NQohsUNlTzd
      G7bNLWx3EYxqgcOHT7B+w2oi0wlSmTibt9yOzbIkKYgbQrGiM524tpCyy1FzVG8EF7yFJgKy
      JGG3qYzPJpBliaqkomgFJIsLl8MJQGNzC6ZsRytmgEuXKsemp5FlGB2fpq2tG4siXLa3qFFj
      KblAAewuL2vWeAFobWshl8vidLrIZXM4Xc5XDwy+MkvA5Qeq+M85wZVyGdmiYpXqF6zxyxWb
      Rb5kj3gpfNedxa7xRqg5wdQmxrqV5S26Ia5VyqRzBTxuF4IgIp0zf8rFPKLFflOu/bvv7Axf
      X8BM8LKYGesytNW5+cOfv3/B5C0li64A8akwk6k8Hm8AVTBIZAvUh/yMjYVpaGqlWCxjETUQ
      JCqGTE9324pftaNU1Ykm8ze6GUvGwk4Bs7QsybsmShLlcolCsUgwFCQaS+J2OYnMTBGJRqno
      EkGfi1h0htpCkDWWkkXvAQJN7ci5Am63C0wTQRSp83vJF0p0263ki2XsdhsiJps2rudmCBBZ
      FYk638KNdlvuJpDftXId+JoTzMI7XYlUlopx7S+Yw6rgukjh2nK/35Usb9F7gHw6zngkSWdX
      50WGPOrMzqYJBv2L3YwlZX9fhH/83qFrPu/H71/Hz739tkVoUY1LsegKkEvGqRgiE8ODZAoF
      XJ4gNotIdCqM7AriEEymZ6ZQECiZGg7VxuTkFHX1deiiyqa13YvdxBq3MItucYuyjAjIqp22
      pjqcdoV82UQUBFTVgnKuazINHd0wkSQRRVVxulyUi8VaKXSNRWXRe4BQSxeh121rAOhqOf93
      K1DKZtAtVhyqha7uHgDaWlsXu3mLQoPXxsPbu675vFUtN5cpuBJYNhVpVpf7RjdhwWird1Ef
      WIfDquCplTgsaxbdBCpmk/QODKHprzFmjCqFYmWxL33DONAX5eNfeOKS6wjXWD4sfhQoE6es
      i0SnRhmdSWOngDdYRzRVQTWzaLIDsVzC7rIzMxPF6/MjqQ5KqSna1mylzue88kVq1LhOFr0H
      kC02erq6yGUzIIDb40EXZJyqgiTJ2O026ptasdsULKqK1Wano6MNr8dDIX/rlBPUuDHUEmEs
      fOLlxNAML50YZ2NXHffd1v6G5S33+13J8paNE3wz0ey38943rwFgInb5GTQs8gKXTdS4JhZd
      AUqFLKLqYm62wCqxWJ5QaG7ATSmboSqruGw313DAA/3Rq84Er2rx879+9W2L3KIal2LRFaCQ
      iaP4XEwMniJVNTFyZeJxBzPTk9QFW1AdIifjRe7acduKL4OusfJY/CWSEBgLh8nmC0gIKIqE
      oliw2Z3YHTZsdheKoKPXyqBr3AAWvQfwNbTjawCY7wx2d79a49PUsHIWwLsamgMO3nlnz1Ud
      W7P/byy1KBALH3WIp7LkywvXpa3k2ZcB3I5rm7r+pooCFTIJwtNxOju7bpl58w9cZzn0zcqH
      HljPz7xt841uxkVZdAUo5pJgGoyPjzIWHqehMYSpCWiVLEVs2CjStW5LbQbjGjeERVcASVEJ
      NjZSTc/gsKtUKjqqasUq2bFaXLgdwdrLX+OGsegK4A2dK3v2dNHU1kUikcDvv7nLfpv8Nt51
      96oFk2caJoK4cGN4l1remrbAgl1roak5wSy80xVLZBbWCTZ0JHEBndZz8iRJoLXu6hY6uRzL
      /fe4oU5wMZdmYiZOY30dNpeTW8ENPjRw9ZngG0nAbeMrv/u+G92MG8riK0A+R1XXmRwdwuLx
      kUunkESBqqliFQrkqyIWSUQUdKamp1m18Q7aG29uE6nG8mHRM8GKRcXQyjg9PkRBRBQEZIuN
      zs52KpUqFkVGEEQM08TrC+JYwbOM1Vh5LHoP4PIF2egLvrqh9dWxwJu27gB0RgeHsPtbqPPf
      HMMi20Iu3nPP6gWTZ5omwgJOZPWKPIdVWTCZK5WaE8zCOV3RZJ5csYIs6LQ1Bq98wlWyXO/3
      ZpC3+GOCcyn6B4fnjwl+DbFolEKhsNjNWBK+9swJfvPvn+ax3b03uik1rpIlcIILaLpOeHwc
      twIz6QzoAgIapmjF5VQplUqcGO3H4g6RnI1z17334VBX7lgdszbD74ph0d8yxWLB1JKYosBU
      MoegiCiKDa1cQbEqqBYLmAIeXwCbJ4BV0ClWtJWtACvCqKwBS+QEb3iNE5xMJvD5/CQTSXx+
      3/ntjU3nSqLbWl4vYsWwfU0jPpeVznrXjW5KjavkvBNsmia53LWtbLiUlEolLBYLoigu+/Lg
      RDpPPFteMHmmYSCIC+eurTR5bXVzy/JeL5f7fc9LFQQBl8tFJjlLeGKaju7V56fq1qp50lkI
      +OcP3khFotjr67hs5N7UOXW6j/Ub1hKLxHA6rFRNiXIhj8/rJpktYpUNRNVJKZvC5fFRLBXB
      BMGoojq9pBMx7E43DrttWUeBXuGlM7Vy6IXkC594G92B6+9Vr6kUwu0L4s7kmB3r48XxJKvb
      67DYLUyHE8S9MrMF8NisGFRRDBWllCOfymK120llC4R8bkRJpL1tbgRYNj5DNDqDRVVwBxqY
      mpnBY5cZGJ7EFwqh6QIOuQpmDNntY+rEURxNHShagcmxcXzBEPl8gZYuB46FW3y9Rg3gEj6A
      alExRTftLTYURUCUFDq7eygXZuhubCYfj5Cv6NgcNkQFipKCLIuYpoHPLjJbfnWFRE1Qufvu
      O0ilsmQSMRxWFV20EAoF8Xg95Apl7BYLgmIjm0xQ19KJJxSgnMtiNmtYnV5kKYG4kCuk1Khx
      jgXzAarVKqVSCdUigWTFIi9siqFUKuH3+5Ekadn7AL3hGPvOTi6YvJVeDv1G5b3n7tUErnHd
      5ddyud93RWaCDcNAXECnqybv1pW3IqfiWciHU5N3a8tbcdmmYi5NeCJCfX2AWCJLfcAHpo7D
      40O+xm64kEuTylVwWExmMxWCPhemruPy+bme9bsNvcLg4DD1DU2Isoiugddz/bNbjw8OUd/d
      xdRwP+5gIxKg6wZ+v/eaZZmGzujwIDa7i1Q2T2NdHZICkuLAdh1Jx0I2xfj0LA11fiKzaeqD
      fgQMbC4PynUu9TkVDuNrCDE6PE5jfQOKVcQU1Otah7iUTzMyHqW5Mch0JE5DKIQomSg2F1bl
      VXNoRfUA6UQMXVKxKQIzs2l8isjo5Bjh6dg1v7DxWATR4qBazpNIF7CbGqPhIabjmet6+QFS
      iTh1Tc3MjI6w/9AxbG8wbGWTJcpaClOtIx2fZv9Le1Cd1xkOFETcHjcz0xFaGvwMDwxyemji
      umfqUFUrxWyGyViSgN3C6Ngow5ORa/4IvUIlnyE2M0t4OkpnZyMjZ/s41jdy3RWrpVyGqmEy
      E03SEHAzMjxEX3gK9XW+6YpSAJc3QC42Raas4bTKTKVzhHxBQh471Wssv/H6g5SyCSKRKJg6
      8WKZulATbpuIZlyfW+R0OhkfHcbpD7J+TQ/pTPa65MxhEIlFic2WKCTGkK0uNmzaQCqZvD5p
      1RIjo5P4vU6Gx6YI1jXQ3uinUNauS14+n8NisWBXZSbiaYKBOup9TiqXKHq8EhVNw0BDlUT6
      B0YJNDbR3VpPtnB9C6koNieyWcWqSoSnogRD9TSHvBQr+rzjVqQTXKPGQrGieoAaNRaamgLU
      uKVZcVGgGlfP9NgIRVS62prOb5scHaQiWPF5nNid7gVPWK40agpwE3O2fwRZr9DXd4pGn494
      Jkd4apata1vpOzlNoPt2dqxru9HNvKHc2up/k1PIJmhasxGLqOBWRaqVIshOnLKOv66BBaxe
      WLHUokA3Ma/M/vDKT/z62SVME8RbXAtqJtBNzCsv++v/fXX/kjdp2bFiTCBJkhZ0bpwaNWAF
      mUA1aiwGK6YHqFFjMagpQI1bmpoC1LilqSlAjVuaeQowdPYEBw8f4vDxM+ilFH3DUxecYJom
      vaeOcfDQYRLJGBNT8ctewDRNbmY/u1pM88ILL3Bg/z5m4pl5+6KTY2TPlRvrxRTh6cT5fSPD
      wxeVF5sKc/DgQcKT0Use8wo3+7NdeAz6BwYBSEyPMZstzVeA0ZFxNt2+HVd5hvGChXq/G71a
      4uSJExQrcz/k9OAxytYGdty+DVXIM9A3zMnTveimyczEKCfP9KEbJolEgsmxUfY/+wO+/cwu
      ktni0t/vEqAVsxhWHzvuuJ2Tx46QTCQwgUQiQWx6gr7+PsanY+jFNCfP9NI7MIJpmoyOnPt3
      sJfpWAoTwChz+OQQ27fvoK0pxMjQIGdOHSedL1PMpTh69CiZQplEMkE6HmFwoJd/+devMjox
      c4OfwkpBJDw0gGaYnO7tx2GzzFcAUy9x9PAhRmbL+CxZTp0a5cXdL9LR1cnu3S8BMD6WoLOr
      AQQBAYFsoUJAKnB6LE6xWCQ+3sve44PsfPpxTNVNe1sbazfehs9lu2iTbgbCQ7089+QT1Lev
      4vjx4xjA8eNHwdRweOuY6jtOvFDFlCx4xSxH+uZmjBg+fZiyxc/Zo/spawbkokjeZgRhLmmV
      SSXpXLWW/Xv2UCoWMYwqjz/xQ47sf4mxWI7urm66enroaGm4sQ9gBdHZ6GU0kqSkSxSnB+cr
      gCBZ2Xr7dt7+yDuxKwAm8dkog4NDtHd0ANDaFmBocOp891vfUI9VtVApZOgbi7Fjx3a0ahF/
      Qyst9X5EUcDUjZu6q27vXstbH3kP00NngDnTRNcNEGS8Hhd2q4qmm3i9PpxOO5VKFYBMKsHk
      +CjeYAOCCLjqqCbGMU0TwzDw+IPYVBVJhIOHj7HpttvxuVUE1cGmtd1zmdyaGXRNdK5dz9Gd
      38ffuopCLo302c9+9rOv7BQEEZ/ff04rBCTJwuruVmKJNE6XB7/XjctfTzY6yujYJJ5AHTab
      A7fLjur0IJYzzKaLNDY14nc78Xq92NwexgfOYPeGsL2B+R2XM1PjYWLRGD3rN1PvtdE3GMbm
      cNPa3EB4ZASLJ0RnUx2R6QnieZPtm9cgSSKr120gHplGtFhprK9DFGV8ToWzfQPoggWfZ+4Z
      iqJIfdDD8OgYnkAdjfUhvF4vgiBSyiYoaCJe9/UPvr+VEGUruWyGjRs34A811DLBNW5tamHQ
      Grc0NQWocUtTU4AatzQ1BahxS1NTgBq3NMtWAQ4cOMDo6Oi8Kds1TaNYnMso9/X1MTY2RjQa
      vVFNrHETsGwD8/39/Xi9Xo4dO0a5XCaVStHW1kYkEuGBBx4gl8sRCASYmJjgxRdfpL6+fi57
      msmwfv162tvbb/QtLAqmaUKlgpFKAAKizweKpTZa7jpZtgqwbt066urqGBkZ4c477+SZZ56h
      UqlgsViwWCxMTExgs9mYmZnh9OnT+P1++vv76ejoYHh4+KZUALNapfz045SffRIjPgsIiKE6
      rO94D5aH3o6wgOuc3SrUEmErBFPXKXzp76ns2nnhTkFAfdu7sP3cLyKItVkzroVl6wPUeA2m
      SfXQPiq7fnTJ/eVnn0Q7cWxp23UTsOz7TMMwePTRR1m3bh3Dw8O8/e1vp7e3l8nJSdrb2zl5
      8iRdXV1kMhne+ta33pS2sAlUdv/o3P8ugWFQeekFlC23L1WzbgqWfQ+wd+9eJicnicViVCqV
      8wuexeNx2tvbWb16NaZp4na7b3RTFxV9+sLBSddzTI35LHkPYJomZV1jIp1iJpslkS6hpQWa
      gy42dNThsCnzvuJvetOb6OnpoVqtMjQ0RD6fx+/3s3HjRsrlMps2bWJycpJ0Or3Ut7KkCA7H
      ghxzK2MYBvl8ft62JVWAVLHIrpFBjk5NUtTmauJzCY2JU2UArBaZHWub+Im3bKAl5D6vCPX1
      9QC0tLScl9Xc3Hz+/52dnUt1CzcM5bZt6IP9VzzmejBNk+RLh4k9/SKuTWto+LGHEZXrW5po
      OSOKIi7X/CWmlkQBTNPkZGSa75w+QaFaveRxpYrGiyfG2Ht6gp95eBPvffMapAVeMXAlIggC
      6sOPUHnxBYzoxYc/Sq3tWO5/6PzfpmliajqCJCJc4RlmT/Zz/Bd+D71QBFHAqFRo+dn3L+g9
      LFfmDYhZDEzTZN94mMdOHaei6xfsrxQNMtH52w3T5NhghFyxwtZVjTelY3vNyDJS92q04QHM
      zGsG3wsCNLQyW3Iz+c2nKI1PU60aJPcd5+RvfI78QBjn2i7GvvpdBHFuolzZYQMEMif6mfyP
      pygOhknsOjAnzwTF66bunffdkNtcaha9BxiIx/jB2VMY15FueGLvAA1+J++5Z/UtqwSmaZL+
      /tPMfvlrVCMxZL8X7z07cK7tAEFE6l7F0D98m9mndwOQ3nsU39vvI9EbJt8/Sq5vhNjug+T6
      w0gOO4LLiWdDN472JqJP7KIcmcXR1YIS8FKNpxAUmcBb7rqxN72ELKp9UdF1vnfmFPobyLV9
      97mDFNKXn3rlZibz1E6m/vDzVMITmKUy1akIsceeo+ptwfahjyBvuI3kniPzzimc6se9aTWi
      ImFvq8PZMbdCjF4oYvG5SR05Q+LQKSSbCoBr42q2/cff0vbxj2Bf10NhMoJevr7VGVcai9oD
      HJkaZ7aQv/KBF0FG4271ND/u2IV0dAwe/P0Fbt3KYPYrX79wo2ky+6/fwP22BxBkCWtzA/ne
      ofO7ZcWkzp2j+xe3oqgipgTNvg3EUgrjLw/Q8I43492yFj2bZ+bJ3az77K+h+FxUsnlSR8+S
      OtaLrbWRxve+ZQnv9MawaKUQpmnyzwf3Mpy4/Nf7tVEgAAGD2y19fNCxixZ5dm6bzY/jl55F
      kNXFaOqypveeRzByF35EJJ+HNbu+PxfB2XWAs5/4I8xCCW+7m87725HVC0siTBPy7g4O/PWT
      SDYrWq6AUSzhv3srqZMD+LesJvnyEQRJIvTWu9HLFXp+6xfw37H5qttrmubchYxzCzcLApxz
      wpejGbtoPUCxWmUinbrq4wUMVisTfMC+mw3K6PnFG0wTzHwSPdqP3LRpkVq7fDBNE1M35qI3
      goDa3UHx+OkLjlNaWyhORpBdDnq/8FWyRYMNv/5ThEr9COaFwQaYexcduTE2fuJ9jO3upZpM
      Y+o6ap0fxePEs2kN+b4RQg+/ianvPItRKmNUqtz57b+biyiJAsIlVugxTRO0KmaphFmtzv1w
      ryBJCBYLWG1zSrCMFGHRFKBQrVw06vN6BKBBmuUn7C+wVR6Eskw150YvqhglFb2kYpQtyG/K
      ITddUdyKxjQM+j7/JWZfOsKmv/wt1Pogwm1b4HQfaK+u6G4KIlMnxxi576dxb11Ptm8ELV9A
      HjmC0HD5CcgE08BnzDCYSGFrbcTWGGL8a98ncM8Wxr/2PfR8gfTRM3g2rSZ19CyS08HsroP0
      f+6fsLXUs/GvfheLb37W3TQNzHwBs1y6+EV1HbNYxCyXER1OUJRl0xssmgKUr+LlB6gX8/xs
      ZCdyWSRbWQvmxf1yo7RynbLXWpkCXPAF1HIFEnuOILscjP3bD6jMJhn6399AtFqZfnI32/7k
      U+R+8BTV6Qi4PTgfup/Jz30ZgOTeY6z5k08iiSa+mT1ctl7oHIqWY+3HPsCBT30B95pOZKcd
      xetCUOa+7kZVw1St1L37QSYee5bY8/sRqlUyx3vxbF1P4wfeiv3cbHSmaWLkclC5it/HMDCy
      GUSXCyzLw5xdNAVwWixXdVzR6SBNHb5y9rLHSV7PQjRryTBNE0olzFwGSkXQDbmT2J0AACAA
      SURBVBBFTFVFcLnBZp9bwM4wOP2bnyPy+AuIVgt1b78PUxTJjU4jWi24VrVz+ouPIorgWncb
      lWQGT2sLsseFls5iCfmwNjcQWBXC+I+Xr7ZxWMQKsl2l9afeScM772Xfh38LwWZHsTvo/PhP
      Mf6VR8lPTuHftg73ui6mH/0hitdNtj9M6o//nnV/+HFs7U2YxeLVvfyvwcjlED3yJc2ppWTR
      EmGiIHB4cvyKPYEpimiSRMf4JJfsFEUR74c/hLhCal1MrYoZmYbZKBQLUK2CroFWhVIJMmko
      FsFmQy9V6f+zL6Lni5iaTuihu+j59H8h3zdMoX+UhkfuR7KqzO4+hKRaKJzuY/rbz+LdsZG6
      t9yFrIgkXjyExa5gy199MVz4pQFS/dPkh8aZeW4/kmDiXtdNtVAif6qP/NkhtHQW1e8mdXYU
      e1cb2770p0x89TFSe44y8/0fUf/Oe5Hk6zRlTBAU5Yb7A/PsjUqlQjKZRHuNvflaksnkBfNQ
      5vN5SqUSmqaRSqVIJOamALdIMquCoatqRH9XO2m365L7LR3tSIHAVcm60ZjVCubEOGQz8x3B
      11PIY46PIUkCDe97K6JFwVIXoJTMsuttv8T0D54n1z9K7uwQ4994gsA9W2l6933ouQIAmVMD
      JJ99kfRLhyieOMvYv3wHw7zKl0mUCL73ERydLQTWtdHiKNEsJvBNnKZrQx2+9a/WVkl2K5LD
      iux2EHluL/nBMQAq0TjZU/2Xv8fLPadKeVnMaTrPBNq1axcOh4NIJMLWrVsZGBggGAwSjUbp
      7u7mpZde4sEHH2RychJRFLHZbPT29vLggw/S19dHfX09qVQKVVWRJIny4AipRJRCLk/TmtWX
      bIQuyxzbsJb79x68aC/gfOihK9azLAdMw8CcmYZLOYOvR6tizkyx6nd+iWqugGS30fxT70Ir
      VfBuWkXsR/vQEfBtXoXVqKCPTaC47OgVDd/m1WT3HD4vqjgRo6ivxSFfOe8itHZR/xPvxbN5
      HVO/+unzYVaTIpWDh1AbGqh7573IHheVQoVk3z78d21hZud+nGu7yfUO4VzdgWfTqqt+Npqm
      zV/p0zRB18+HSG8U8xRg/fr17Nq1i9WrV1Mqlejr6yORSLBp0ybC4TBNTU2MjIxw/Phxtm/f
      jmEYtLa2AnM2r9PpJJlM0tfXh6ZpyIJASFQ4MT1D4+pVl/X8+7o72HrqLJ5sbt52pa0N+71v
      vuobqlarKOcqGavVKrIsL13EIZeBa038VcrkDh1j/BtPYOoGanM9U4+/gOJ2kDh0Gu+WtSjR
      GUrDeUrHTuHye9E7OnBsXkfu4HHM6lxvLdltWN//U/D8tyB/GX/KojJyPEVx/+cJ2aoXzTEY
      MzNY27pxvHkH1XiS+IGTzL58BEvAiybJrP38bxN6YAeKy3o+OvXcCy9QH6rDolrwut2EJyZw
      ORxMTE2TzeWoCwbp6e4iEo2xecP6ud/klVzBDWSeD6DrOi0tLTQ3N2OxWOjs7GTTpk2EQiGa
      mpqw2+20t7ezdu1aOjs7aWiYiwTU19fT2NhINpulq6uLUCjExo0bCQaD3L91GxNaFU25vL9t
      iCK6JNI+MXW+FxBdLkKf+a8IHjff/va3cTqd9Pf343Q6OXny5HmTbXx8nEKhwOTkJKdOncLp
      dLJnzx6mp6ex2+309/efP3ZwcBC/339eSRYK0zQxY5E5e/8akVWF1OAkstNO5swwTe95gMBd
      t5HYfxxvS5DK4Mj5Y41iCVO2MPXcfvx33oaAgSXgw/3A3eQTeQI/9j4YH4JS4SIXUhDe/AjH
      v/AYiX0nUJMRZC7uo0nBIKNP7sPZ007sR/sI3LkZz+bVFMdmmHpiN6VInOCdGxGluS94tVpl
      amaG02d7KZZLZDJZMpkMa1atwuV0YrVZOXH6NNFYjPVr1iAIAoJFveED+ecpgM1mw+VyYbFY
      sNvteL1eVFVFlmUsFsvcdOc2G06nE0VRkCTp/PTdsizj8XhQFAW3243VasXr9WK3WtnQ2sZQ
      Ik7+CtGCpNfDquEw1koV0esh+MlfQ13VA0A2m2V0dJSxsTH6+/u5++67GR4eJpPJUC6XKRQK
      VKtVVFWlWCyydetW0uk0pVKJffv24fV6SaVSxGIxvF7vwo8g0/U5p/c67FpREmn+Lx8k9PCb
      GPibr6FncsSfeRFB0/Bu6qF4dnDe8c7tmyjEM7T94gdJnBmh7sffQTk1d05+OsnUSAG1swNb
      QwAtV0D01yFtvB35nT+BUddOcTJC43sewGUX0CYu7jjL69eTTRRw9rSROdFHJZGmHE9THJvG
      vXEV09//EbJNxb99PQDTkQg+j5eG+jqC/gCmabC6p4dYPI7DYZ/7oLa3Y5omrc3Ncwpgs99w
      0/aK6jc7O8vY2BiNjY2MjIywfft29u3bx3333ceZM2dIpVLYbDZKpTm71+FwsHnz/NR5yOHk
      /7vjHh7vPc3x6clLFsdpssyJjet4OF/C99GPojS+GmvWdZ2tW7cyMjJCe3s7fX191NXVYRgG
      Pp8PgHA4TCAQoK2tjb179543zzZv3ozH48EwDARBWJzhk7p+3Q4hQOb0AEbVoPl9D1IKT5Lq
      nXvp89NxHBtXkz81NxjGeds6lO4OhBODGFWNTN8I6jMv4iql8BVi8NwzSHYH+a3ryM3qjHz5
      KO7Na9jylU8QfvQZEnuOMfW9nWz7x8/i2dJF8cAhMOa3W3Q5GXn6EMVUnvq33Q3lEpVUmraf
      eAeTX3+cwqHjOBoDNLzr/vPnbFq/fp6MVd1dALQ0zc9eNp4b3IQowjIIg15VLdCBAwdIpVKU
      SiVUVaVQKPC+972PgwcPIooiyWSSUqmEoijk83k++MEPXlSOaZpMZdMcnpygfzZKulSiquvI
      ooRNUVgVDLG9sZnOQHDZZAqvFrNSxhwdvm4lOPM332T6u3OzPkhuJ9VsDkxY9+e/gex0kHr5
      MKGH7sK02jj7F1/G1lJPfM9R3Gu78BVi6NHYPHnW9WsYPx6mmp7zqTo//VEG/u7rODqbERUJ
      s1Sm9SPvxuuAxJf/L+a5D5gUDOD7+C8x+p1d5MdmcG1dz+S/fw9MUH1ujPQ5/0IUufOHX8LR
      ErouW16w2RDtNz6sfcUeYHJyknA4zLp165iammL16tWEw2Hi8Tg2m41MJoPH48FqteLz+RAv
      06UJgkCz20uz24thmhSrVUpaFYskY5Nl5Gv4IkxPTzM0NEQwGGRqaooHHngAQRAYGBigp6eH
      oaEhkskkgiCwY8eOq5Z73Ujy3FftKjPg8xGI7dx//i+zXGHTF/+YkS8/RimeZui//Q0gYFu/
      ipmd+8mc7MfWUo+ttRFnwIE+euYCiaW+Aex19aTTORSvi9TxPtSgl42f+w36/8eXSJ7sp/8v
      v8y2//MX5Dffjd0hM/3Dl2l7z48x8Df/TmFgFAQBZV0Ha37/Y0R37sNit5J44Vw7DYNKPI1z
      VTtmPnfB9S+LKCFYl8eacSt2Yqw9e/YgyzI7duzg4MGD7Nixg1OnThGJRAgGg6RSKd785jdz
      /Phxbr998acKMU0Tc2oCcpfPaF8U1crR//q3JF6aC2s61nbhvHMrI19+FFdnM+WxuUX1nBtX
      Yw85sNok2n/1Z7Ft3EDuxf2MffqPL5QpirT+9Z8x9fRenGu76P2rr1KOxql/1/1kTw9SjcZR
      G4IodQHK0QSOzmZiO/dhsauo+qu+mmhVsWxYS3zvMRSXA9VlpzqbxNIYwnQ4WP2ZX6T+/tsx
      S1e5CqggILo9N9z5fYVFHxK5WGiaxtmzZ/H7/djtdnRdJxKJMDIygsvlYmxsDFVVWb16NfIS
      PGxBEOZs2sy1z04hBEME3nEfRlUj3R+m+ec/wNQPXqD9Z96NVqqACQ1rQ/SsEglJCTxiFvPw
      y+gnDyO3dZDZcxTzdQEGpSFEJl1l4uuPE3/hAMF7b8e1pgOrz8X6P/11en7z54nvPU78xcM4
      V7VTmpml4e1vovGtd5HZf/y8HNFmRTOgkkgjSBJNP/1eLC31KPVBkgdP4uppJ3Dv7XO93yUS
      qOeRZUSXe64EYpmYuCtWAXw+Hxs2bMDlcuHxeLDb7bS0tLBlyxba2trYvHkzoVBoSV7+VxAU
      BVPTrj4RBiT7xgg/sZfQ/XfgXNtFbP9JTE3H3tZAz699hMizewj4oS2YR9LK8841M2mM3uNY
      1q+nODE7V4bMnBPr/4WfZuZHB6hEZsE0UTxOUgdPkDl6lnJkFt0UKY9PwWwMxaKQHZ7E0d1O
      58d/kmJ4kuLYFKJqoeWXP0zXp36O+HN7UN0OKqks0RcOItmsNLzlLiLf30k5msB3x2YmvvZ9
      Zv7zh0gOG7aWhlfHAigKos2OYHcsq5cfVsDMcCsKQUAI1WPq+tWZQjYb4af2M/6fz5A/dILC
      mQEUvwepq5lKvsiJ3/1rqpNTNK83EC5lqeo61vwEXf/0Pyj0DiNIErFTIxz57D8Ruvs2JLsV
      QZFxb9tA6sicr1CajDL7749hi4xjU6uQnMDd5iC6/wiF8Rny+TIlyULwvjsJP7WHzMA4+mwc
      3QQxkaT1g28j9Na76f39L1COJgj/y6MYiRQz//EkALHn9rLjyS9j62w5/7Iv16DG8q8vWGEI
      koTQ2IwQrJtzjC+GKJIYmKL/354hceAUwdvXk91/DD2bpxSeonymH2vIS3F4jKZuFyJXiLIU
      8kjJKQI/+X58H3w3jk1rsXhcKHoVV8CFp60Be0cznZ/8GezdbfR87EM4ZicRtFeTdkIhT4PL
      JPbCAXKDY+jlKrnwFCCQOnjyfJW1USzj6moh8qMDWOpDCLKMd+sGShPT52XpuQLJAyfm5ArC
      sn35odYDLAqCKII/AB4vFPLomQzJ/cfxbFmHKUqIXh8T//B9CuEpytMxvN0tvNaCr8SSJL+z
      k2oyjVRfB6ErR8dKp07S/6N+FI+Lqcd34WkKkN9/FIBqZJbEt34AnR0Uo0lSP3wes1y+QIaZ
      TkM0iuJ24d+xCc+WtQz+1f/B2daAkUxhVqpIbieVYpmJbz2F97Y1rP7DX8US8iFWKqQPnsSs
      alhCfmaeeRlrWxP+u7fc8GTXxTh06BBr166tKcCiIQhzkQ63h+JMkoOf+Tt8m1aRPnYWtake
      LZGi494N2FpdWClSdFjR8iUESULpasdeKlOSJSSPG7hyfVF2aILhrx/Gc9tajFIZwZz/gheH
      xtAyRarZHKWp6CV/+PoHdzD5whHyg2HMSgUtm8fW086a//Yxwv/0TQyLhZGvfo/m9zyAPpsg
      9sxLGBaVlve/BaW7g4aH72F21wFmn9pNYudetnzlc4Tees8bf54LzOjoKPF4vKYAS4FaF8DR
      3U5+eAK9UKI6OUOozkZm91xMvZBK43DYaPiDT+PecRvhb/2Q8a88ilGukJ5S8HaIlx4rcQ73
      gw/QknNhCfkZ+9bTyFu6KY9OnN8vqBYszY3Ur1uF7LbCZPiCpJ1ot2GVNbY+2IoRjSAYY9Q/
      spbp6AyDX/w6qb1HEWSZVb/xcyS/+/ScEy0K2Deto/fP/oFyNIH3ztsoTc4tW2VUqqQOnyL4
      0N1ki3lmswlyxTx21YbX4cbv9F42b7SYOByOmgIsFYrLgW/bWuIvFRCSaQIbOjCG5tf3mIUi
      Qj5HOVNg+sndGOeqPEuuRkSfhpm8zOwavhBn//lJUkfOIlpVNv7Jr+Nob2Ts8/9AaWQc2evG
      /fC99P3jo9haG8n53Kz6sXeR/vYT55VAUGTcq5so/Os/g66fVzgrKdotKlOZucSVqevEH99J
      dfxcDZFhUjjZi+/ObWTDDnJDE1g7Wqhm82ScEo/bouz7q08wOD1KpvhqwkyVLbQEG3lw4z28
      946HWdfSsyDP+mp55zvfCazgMOhKwjQMTN0kvv8ExckoVoeKVLyIWeNyM/3sPgRBoOOXP4SZ
      y+Pwu6hoMlYtfdHSecHtRfnJX2HoS9/BrFQxNZ1iNMHwlx5F6WzFe/+dpMMz1L/3IfITEWSX
      nfSxXqqqg1yqgP/eHXjfdj+Bd78F88iei8byBUPH4ZTQO9agNjXg6Wqm2P9qhSqmidRQRyVb
      oDybov5n382ue3z8vXWQPbMDTCejlLX5eQrd0Enm0hwZPsV/7nmCkcgY27o34VCXLkM8OTFW
      6wEWm2o2z7FP/Cml6VlCD+zA4nGi2C0IuSTma2ZfExSZyP7T5MZmQBBoft+DiNEI6TO9pIGk
      W6XnJ+9BSk5jFgtoVRN1x11U197B8Nd34tm2gdT+41ib63FtXEXy6FkK4zOkj5xBzxXo/4sv
      ITjsWDx+ZI+L1JHT6IUSXkcAa+cqmDpz2VJuqZxH0lJM7R8k9JlfQLRZMYpz+Q772m4S/WFK
      0QS2n36YP0r8iCMjF07lcik0XeP7B59lX/8R/v6X/4ytXRuv+3lfC+nYRK0HWGzyQ+Oc/ZP/
      TWkqiq2lAdnlwNBNlIbQXNbYNJH9Xpp/85fRLVYyJ/sRbVZcjQFyh06el6OXdZzveg/+T/46
      Q987RHjXAPHBOKmRGSYee5amD70Da1szxdk0hqahVzQklxPZbsMolXA0hyAaozoxjbW5Dt89
      23Bv7CHy/AGa3/MA0ukjV15go6mVqsOLc1UHmgGWugCBh++h+79/Gue6HuJSlT/nKP3Jyet7
      VuUiTx15nh09m2ny11+XjGshHB6sKcBio3jdyHYrzlXtIElMPfYMgiJh6+li8kAva3/tgwTb
      HChT/bjJ4gg66fqDT2Hxe0k8N3+WB+8Dd1GamSX8d/+Gqelo6SySKOC99w5Gv/o9StOzVBIp
      tGwBa10AJeBBL5bm5gktFihNzICuIwqQODWEliti9ThIHzqN0yEgJmOXuIs5tLbVmL4gU995
      jnx4GjngJbpzH7mBMK2f/Ah/OPwDBq7z5X+Filbl+VN7ece2B3DbLz1O/I1SrZTIZ7M1BVhs
      BElEkkRmvvk4hdMD2NqbsLW3kNh7lA0PdmIbOQqzEcx0CrJpbEIJKdyH48H7KUzF0ZJpRIuC
      e/tmJvedpjQ2ReU10R21IUjrr/wkkWf34r1tDSYCPb/842QOn0L1OCnOxBEEEavfTSk894W3
      dbYSesd92BoCzO7cR2kyAoqC21K5ZDm36PczejbJzLP7aPnwO+j4hQ8w/tVvY5QrFIbG+bYw
      xg/DRy567rVSrJQYiYzxyLYHkRZp1ctCJsXoaLimAEvB4Q9+knzvMHo2j5kv4NqxmZCUwKfF
      Lh7eLJfQjhzA/6lfIzmTpuVjP00+V6L7Vz5E9IWDGIUCkiKjNtUhNDZSGJ8hdegUeqFMJZkm
      9cI+KjMxiqMTWFsaKIxM0vyz70MN+rH6XaiVIoyHsdlkJL8PU7HQ8Tsfx9HThnb2zAVKILjc
      uH/7M/gefoDqwCBOFaR8FsMUKKey5Da38recwRAWrrA4HJukNdjE+tarH3h/Lag2OzMz4zUn
      eClQfB6Ko3Omgex24mxvxDO5h8tWOFQrTPz3/8nkS2EyA2Okzwwx+a2nMPIFBEVm/Z9+EntX
      G5Pf3Xl+2vP2DzxI+tQAVDWSB0+ieN2odQHSJwdIHjlD4K7byP9nP6WRMACViWmsDXVkDJHI
      c3vx//6vIARCFL73XcRCBmSFkmlBecvbkddvJPfXX0Ic6ic70EcWUJwOtv/jH/EPyWNUXxhb
      8Of29d3f48fvfmTB5QJUCylCje21HmApsHU0kz7ei72jmXLVIHfyDPWeypWTW7dvIjpVwtnZ
      zKpP/gyF4XEqsQSKx0nkhYNEnz+AIEmIukZLV4Dyiy8jx6PYJIPQ+x8mlyxgCfrQNZ1iJIEx
      OYXe1zfvGkYuj+DxMLXzAOW+ISa/9gNm+yOwehPKQ+/g5Be/y/QP96AlkmR/8BRm+dVIkVmp
      YhSKfLF4hlTh1VVr/C4vnfWtWBUV+Vw9lICARVYQBJGOuhbcdieaoWNVLCiSwqb2NSRyKXTj
      1QFFiVyKD97zCE7rwo8cqxbSvPjSgZU7IGYlcfRTnyc/Osmd//cvePkDn0SPRti2RUW4wjye
      4m072P+No2izSeweO5VECltnK1v+9XOc+YO/RbJZWf+532Tqj/+Swt6D8841rVZmciKizYY1
      5GftH30cMZlg9Lf/7ILrGGvXoylWKgcPzxsfLAQD5Kfnpqh3NIdwltOgzR/xVmmr5xdXxykb
      r+YPWgKNdDe0ky8XWN+yinBsAlVR0Q2Dk+FerIqFkCeAKIhIoojb7qJYKaHpGnv75vsRX/7E
      X3L/hsVZscY0zVo16FLQ9bEP0/DIvRz46B+gFUqIwTo05coJn7xmQa0P4GqrpzKbBMOkODzG
      wJ//I6kXDxJ/5iXG/+kblE5cJOZeKtH1yN2QyVA42Uvv7/wv1FWdyEHfvMNEl4OqIOHb1HPB
      4Hj3hh5ktxMl4KXn9z6GEvRfcJlMa4CKMT95li8VODJ8ClEQOTMxwNDMGLF0nHg2STQ9y2Qi
      wkR8mlwpT65U4PRYP8MzY8xcJAo1Gb/4ooALgSAINR9gMTBMg5n8BL3JU0zmx0hXU5h36Chb
      6vBkW2mI2MiPpPD2HrikDDEYouRvJXnwu9ictvPmkiDLFIYnzpUnm6QPncJ2kXHIAlCJzGIU
      5pJVxfFppp/eg9bUhgzomTxyyI9lx3YKwzME3/om4o89hZacG9FmAqnDpzHzRdTGEOn+MXKy
      E7u7iJ6ZK2mwru7C89EPY/77Z+ddO5mfk3Fg4Nj5bRPx15RLGzqR1CyR1OwVn2WpemHV6kJS
      U4AFJlqY4fnJpwhnhjBfb+LIkPblGfNB3yYPd/lX075vAOF1X14hEMT+G7+Ho7EFe0s9se89
      TfFUH5oG7b/9KwiKTO/v/zVIIq47tyIcM6j0z68tEhSFsqRibW2kMpvEsaaT2N4TWIIhXG+5
      h9T+4+RyJdw2B3d943/OLTb50Q8R+ebj2FsbMK1WYs/tA6A0GWHmu8/h2LQGS8Nt2N02CpEE
      k88fQv/hfgSEC+/1dXjsbgzToKpV0Q2dqn6F4ZPncC2C/f9aagqwgPQlT/FU+DuU9SsPiUxX
      0zxzh8KmVXfx5hErTE2hlaukE1UaP/0ZpJYmKs8/h/rUozRlY/D/2jvz+KjKc49/z+wzmcyS
      yWSyTUhIAgmEgCggqCgK3CtqL3r1iivY2l57e12qtXKt1NZ6r9Wr16WbLdJatago7lGuVqCA
      Etk3yULIRhYmmUwmM5NZz9I/JoTFsJgElX7y/S8z57yfc968z5n3ec/z/n55Cuj06A7swHjT
      t0lb+yKKorBxwT1klBWg8fsRO/qeqBoN0uhigp1BchZeScvzbxDxdOGaPpnexjaaX/uQ3v3N
      5M6/BGthDoIAB16uoPqXz6Ey6Ch7/jESXf6kUkVfiiiLEsGdVfgq2lHptGizXURaO9B+uhf9
      OA1R6fhlFCpBYJy7mM8P1FKSW4jbkc3u5hpkRaa588QvznIcWaf+DxgEIwEwTNT31PJew2uI
      yqk92QAUAXalBVCPLWWO+w42XXMnXeu30dbyMGfdOpvIir8crbkTixLftBGxpRnLkoeJB6LY
      9QqhD9ciaNTYpp1NyBdCTkkl/Z9n0v7Ic9Q//QJSILk9M7SzCu/mzym+9Urikh/DlnVEN62l
      ueIdgnobKApyLEH3hq0kmlowOq0oGi2JmEjK+GISzS0kSJY5G7MzMLizKL7nFgpWP01VS93A
      N0lyOqVVa9BptEiyjC/kx2wwnbR/jDo949ynt0p0JACGgWA8QEXjyi81+I9ke+dn5KTkEe9K
      eqqJzc1E3lhxXMEpua2VyOuv0PS3WqL7klWZiijh27ANsaCQcEM97Wu2YCkfi8FsoPuTpNyK
      lBBJLXQjVryHXor1T1ridQ3oVCpGL/gnVI40Wh57FjmanHunjCnAH4jTtX4rZQ9+n/2PL0Nr
      t6J3ZxNp92IZX8Rc38wTB4CisLluJ4qiUBXah1FvID/Dzf72phP2y9TiSdhSTq8xysgq0DDw
      afsawuKXFIc6hjWtqyh79qcU3XMLpQvnQPzEyV9s00ZCO45Z/ZEkbEW5WCeOxZCZjrWsCMFq
      QbBaccy9gHgoyoS7FqCVvti2IMtYzQJatdA/+AHCtQ2kjStAq4aD73zM2IfuRFIg4fMTrGui
      7jcvc82MyzDqDCe83kg8SjQRQ5QlgpFedjdVE44fX0tIQODmiwZWGBxORgJgiETEMFXdu4bc
      Tm8iSFt6iDE/vhVT2smnB4TD6J1HL2kiCMT8ITwfrCfuDxJp7yTc0Eo8FCb/1qsxuTMJVu0f
      uD0g0dCMxnqMbqoAvg1bkHvDdG/cQe0jvye0rwnfp9vR2SykTR6HXdGxcNbwDtZpYyZx/rjT
      r+g3EgBDpDGw/5SS3lNhn78KWRThFKogBZMJy2VzEPR9ZnOCgGXWDNSuDIyjstFnOIg0tROo
      rif/hsvpeH8tgd21tFf87bhtRoMRPFur0Y/K7W/Tde3lmCeU9B9jyM3CNrUc941XkHHRFLbf
      9iBrp13LgvSzGJtTOKT7P4TVlMpD1/8IlXD6h+dIDjBEOiLtJz/oFPEEW9j8nQcQ2lsodKgQ
      TiA6GzPaqfnTe7jOmUx0TxXGolEc3HuARG8tJffegvfjjSR6QqjUKlpfegtkBY01lbKXfoXn
      h4uRunxHNygIyLn5BHc3Mm35kyTaPYgdXuINTajiUTRCOersbGLBMBqthobnXkfvTEMKhZGA
      6I59PH3Vj7h56X10RAMDXvOpYNDqeeKWJRRkuAfdxpdhJACGSG9iEFqgxyES7yXcchAlLNHr
      dmEODRxcgjmV9m4tKU4rPesqQZKJdXZjGp1Hj6LQsXIVPX3yhrYZk4nWCYCCHIvRsGwlksVF
      iiSj+PuMzPV6AjE1PR9sQNBq6V63idT8LFp/9r/I4eQ8XaVWo7Vb6G7xklqYg5IQMbgcpORl
      onPYkYIhGi+9gx+YFJZdZKaZL58TpZltPL7oAS4YN3VQ/TcYRorhhkhdnbDpbwAACSdJREFU
      Tw2e8Km7M54IrVZPWaIYQ6aTurcrcV91CXR1JB0mAQQByeqg6aAaf3MX5gw78dYjSgUkicIf
      f5f25e/0ryDJ8TgFd9yEHE9gyHDQuWo9oWYPhvOmE02xoSopRcwvxre1CiUhoiREIk2txDZ+
      hth5xEZ8RUHp6qJXVOG8eDrp0ybg+3A9sQMHMbkz6Vq/hUSXH2NE4tr5N2KaOIa9B2qRTkE6
      XRAE5k6aya+++xATRpWc9PjhZOQXYIhYtMO3TGfWppLwBRAkGff55TS9vQmNBjIvvYjUiSX4
      9h8kqjLRufbPJPwBUjKOToI1aTZq/u8FUkfn0VtTD4ASS3Bw+buoDHrU1sO5RcTjQ5QFUscU
      kzn7XHyr1pGIJ0sYVDotCc8Xg1oOR0i/cBqu2edyYOkK5EhytahrdSWpk8cTOXAQtdlE3uwL
      uL+smOtnzueNyg9Ys/tTatsakJXDwSAgkOPI5LzSc/jXc+cxsaD0K5nzH8tINegQaQjUsWLf
      n4alrbK0s3AvbSVWuQWpobH/c5XRQPmq59Gm2Qi+/xEHlr5Kr7eH0qeW4Nu0B8+bH6E2myh9
      5qfE2jw0/245/k27sM+cgr9yJ1Jvchqjz3Im3+C2d6Lo9MS6/DinTaBnexXmwtw+w2sBTV4O
      6u1bUALHzOXVKnpM6UTavegsKUi+PiVslQr3ovl0ra4kfc55FD/wH6h0hz3YDilAePxeApEg
      eo2O7DQXjlQ7Ws3werV9WUYCYIjEpThLP3+SUGLwid8hrilaSH7KaLadeyVi30uxQ7jvugWx
      8hPi++r7PxO0Wpz33UnNijV4124m69Lz6a3chtjn4qKxWUj0RpH71CdMo904r/sWkfZOdFYz
      3nVbCG7bgyJK6DOdFNy1kO5tVWjMJnKnjqV5yaNJh/s+LPNmU/vaGuRYHOukEpRoHEESSS0t
      pHPVuuSxgkDp4/eRfd3lQ+6Pr4KRZdAholPrmOwcer16umJHW1FN2ysVCDrdF74PvP7WUYMf
      QEkk6HjsGbo3bEURRTpXre8f/ABiIIRj1jRURgNahw3j2ALaXq3AXl6M0htG9HQmxXy1WmSg
      7revYLSaMJl1aPLzKPj1IyjpTkS9iZwld1Pw6P0U3X4jqYW5lP7sdjSudAKtXsRI7HCgKAq9
      tY1D7o+vipEcYBg4O+Nc9vp24o16BnW+ChU5v6mm5v/fAkBvMaFVqfoT2ZTxY9CFO5EHeHGq
      xGLkXzYDb6MXlUZNfHdV0qOA5FyedAeizQ4pJoKNbYRqGvh88RMofdMilVGPfdZ0AlX1jJo7
      jfYX3wBZpv2FN3FePQ/P/g4UScbS3EniD8sJLH8NYyRG65JHifljiL0RZI22XydIYzGTcflF
      g+qHr4ORX4BhQKfWM79wASbN4Ep3L7ReiHHT4aRTlBTGLH0E67yLiWiN5Cy547gKy4IgkDVv
      Jqnji/FW7kKVk4UhPxdDgRs53Un9H99E70rHfs54Muach6DTok+39zu0a8wpyIrCjJVP0b22
      8vDqUTiC9/21KH1/d3+4jranliGHwiBJxJpaSVVizPzoOeKhCO47FzHh979gSsUfsEweP6h+
      +DoY+QUYJhyGDK4b8x3eqn+ZruiJ9XUOoVXpmO2+jDLbWWwf/y7dfR5h5pLR2C6Yin9fC8EV
      f6X17dXYx5cS+aRygEY0CJmZqPXVGLLS0eblEvV0MWnxQkJbduDdasN+2Wz2PPQs6TOnoE2z
      E25sI6Ugh6z5s/Fs2E7x7TdgyHSgtVuINh0uT3ZdMYtsl5NEdwCV5yA9B44uXpMDQVTxWHI/
      gVr1jZRBPxkjATCMpBtd3FRyG5s9n7Cts5KIOIBbO6ASVBSai5jpnIVDlwaJGGVP3U/LX95F
      kWRyb56PoFGTd+MVGHNd7Lj7MbT/Ngd9Rvrhmn8AQUBz9hS2LPoJYqCXnOsvp+jOm2i9azH+
      n/8CFAUboLzqofyHC8j+95vYcduDeNo7UIBIUytCNIp5VBY9O2tIOXsC8U4fCW83qRNLcC+a
      j85hQzAYaf31nxnI/UxtMaPSnrnDaGQV6DQRFSM0BPbRHm6lJ+ZDUiRSNGacajujlQwssuGL
      qhAGIyqrHQyGflcVsbuH6u8tBq8XjdmATq9BbTKQSMgE4yqwpdH5frK+R+9yMObi8cQqPzu2
      ZVRWC6a776H+xQrsE4rpqFhDb02ylDp9zgw6Vm9CjicoWfJ9XOV5KFvWoTTvR4lFESw2ZKeb
      +hdWI0UP65laZ82g6Hf/nfT9OkM5c0P3G45BY6Q0rZzStHKgz0a1x4/i9x3/pGgEORpBsNjA
      ngaSRP337kXcUw2ACERVKqRxE+iqbcV54RSsY0bRtboSORrDUpxHbNPmAZuWewI0/uRRDjb5
      SZtSdtQ6vRjoRe5TexB3b0OqWgVH2J4q3g4EbwfuyQ56NNmIcYXUqRNxffvaM3rww0gAfGWc
      dPAfeWzADyiE9u4n3Df4+5FlDOEeJj5xLwaHlZSiUSAoNC1bSfr0cqTXv2iafYjcOVNRhzTs
      /flvKb79BrQWM1I0TqClA31eNoULZmOvW3fU4D8SnVoka3waxjv+6xvj8ztU/jHu4huOEoue
      8uDvPyfQQ6K5ZcDv5ECA/f/zLKGaBizlY0nERcItHto+3IhLEI6r79m1ax+djT24r5tH1rdm
      0SqKNCxbiaxA6tgC0l1a5D0D5y2HEKt2I7c0oc4fntLnr5szL20/A5F7/Cc/aACMBTkM5Iqh
      GEyEqvaDLBPYVY1tUgnmktFkL7oaw9SzB74GBLp7RBRFwb+jmo3X3k2wthFFFLFPKMaY7USs
      rTr5RUkSUuPxN9WcaYwEwGlGkSSInPipejz0WU6y/nPRUUGgHz2K0U8+iMGdVEsw5efi3VaN
      3p1NzdMvUbe7A/GYDTUqcwrBrCK69jaRNv0sXHNnYC7MA5Wa7KvmkuiN4KvcedRWyBNyChWe
      Zwojq0CnGSUaRT44eM18weki1uIhtGUnGocd64XTEQx64h1dBPbsS7pCyjIas4m414/n40o+
      f+AZcqYUQ7eP1LJi2iurkDVa0i45j1EL/4XUMfl4/rqRxj++QeEPrseU6yLhD2Co30H8vddP
      fEEqFabFD6MpGjvoe/om8XczosizjzufawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Double Bar' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Horizontal Bars' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABBNAAAQTQFnjAHg
      AAAgAElEQVR4nO2daW9bWZrff+TlTkrcKUqUREneLW+yXVu7prqra3qmJ4NMBugOJkASBJhO
      XuQDBAjyPfImLwJkaUyWbnQwnZkg0+gKpmuxq2x5KVmWbVk7RVLivi+X9568oETb1bbLkmVJ
      FM/v1YVIHj7ivf9znvOc5zzHIIQQSCQ9ivGgDZBIDpK3IgBN095GsxLJniNHAElPY9r5R3Qe
      zsxQx0y/1UCu1CAQ9KIg6A8O0W+37L2VEslbYhcCMKCYFar5EnZrgGjAwlqhQKMJ741E0TQN
      TdOQc2tJN7ArAfS5XJgcPlxmjY1ig7GhISwWhWK1gdtpA0BRlD02VSLZewxvIwyqaZoUgKQr
      kJNgSU8jBSDpaaQAJD2NFICkp5ECkPQ0UgCSnkYKQNLTSAFIehopAElPIwUg6WmkACQ9jRSA
      pKeRApD0NFIAkp5GCkDS0+xiQwwsPn5ARTXidpjIlhoMBL2YjGDrD9Ant0RKuohdCEDQaDRp
      qAYaVjMjbhsr6TTNJrx3eVBuiZR0FbsaASwWM6pRwWaCWKlJJBjEbDLKLZGSrkNuiZT0NHIS
      LOlppAAkPY0UgKSnkQKQ9DRSAJKeRgpA0tNIAUheyq1bt4jH4wgh+N3vfsf8/DyZTIYvvviC
      SqXCb3/724M28Y3Z1UKY5OiTz+cpFAr09/dTKBRYXl5GVVU2NjYQQnDv3j3MZvNBm/nGyBFA
      8kKazSaFQoFkMkmtVsPtdmM0Gmk0GiwsLKBpGgsLC6iqetCmvhFyJVjS08gRQNLTyDmA5IWU
      y2WuX79OJBLh1KlTfPbZZ1gsFiqVCiaTCYvFQq1W45NPPsFgMBy0ubtGjgCSF+J0OjEYDNTr
      dYxGI4ODg3i9XgqFAvl8HgC3202z2TxgS98MKQDJC8nlcui6jtFoZG5ujps3b9JsNrHb7Tid
      TjRNI5fLYbF09wYoOQmWvJJ6vQ6AzWY7YEveDrsQgGBlYZ50sc5Q0E2m1GQw6MGkgNHmps9u
      kQI4gpQadX77+CHXxo/hd7owdrHf/yy7GgGE3mJpZR2htfCYYaVY2doSeR5d19E0DaNReldH
      AVXTmEmucz+ZQDEaMCsKLV0n6vUT9XgZ7HOjdPG93pUAshvrmN0DZGJPyBSbhEIeTEYDDncQ
      t9MmR4AjQKOlMpNY5148xvFAiCvDUZxb/n5VbRLL53iU2iBbreCzOzgWCDHi8dHfZa6SnANI
      nqPRUrkbj/FwI8GEP8jl4VGcFutL39/SNTZKJRYzKVZzWQSCcV+ACX+QkKvv0I8OUgASAKrN
      JtOxFZayac6EBrkwFMFq2lmujxCCUqPBSi7DQnqTQr2Gz+HiZLA9OjgOYcRICqCHEUJQbNSZ
      XlthNZ9lamiEM+FBLMqbr48KIdB0nXixwFI2zXI2jc1sZtTj43gghM/hPBSjgxRAD9Luqet8
      vbrMaj7L5cgok+EhzG/xngkhyNdqLOfSLGcz5GpVIm4P474AUa8fi6IcyIqyFECPUajV+Gp1
      iXghz9TwKOfCQwfSEzdaLRLFAk/SmySKecyKieOBEGM+PwGna9/skALoAYQQpCtlbsdWSVfK
      XB2JciwQwnQIXBAAXQhy1QpL2QyLmRQ1tUnE7WXCHyDi9ux4LrITpACOMEIINsslvlpdotJs
      8M7IGOO+wKHwvV+GEIJ6SyWWz7OYSZEsFXBZbRz3B4n6/Lht9j11laQAjiBCCBLFAtdXFmlq
      Ld4fnWDcHzhos3aFEIJUpcxiJsVSNo2m60TcXo4HgoT73G88b5ECOEIIIYgX89xYWaSl6bwX
      HWfU6z8yaQtCCGqqymo+y0I6xWa5iN/hIurzMeEP4rJYdzw6SAEcAYQQxAo5bqwsYQDeGx0n
      4vEemQf/ZbR0nVS5xEImxVo+i6ppTPiDTPgChPv6XysdRwqgi9F0nZVchptry9jNFt4ZGWOw
      333QZh0Y5UadlVyW+dQG+VoNv9PJsUCIqNf30tVsKYAupKXrPElvMr22gsfu4N3RMQJOV1fv
      zNprVE0jWSqwlEmzms+iGIyM+wKM+f0EnU9TNKQAughd13mY2uDm6hIBp4v3ohP7GjPvVoQQ
      FOv19op0LkOuWmHU6+NkcEAKoBto6TqPN5PcXFsh5Orjg7EJPHbHQZvVtaiaxnI2w8PNhBTA
      YaaptXi4keSbxDqD/f28MzJGn9UmXZ09QgghBXDYEEKg6hp319eY20gw7gtweTiKy/rylGTJ
      7tmVAHLpJNlyC5/LRKrYIOx3Y1IM6Iodl9wSuWtqapO762s82EhwOhTmynAU2xEoP3iY2ZUA
      pr/+ArPTj81swm0WJCo1mqqBq5fOIeSWyB1TU1VmNuLMbSQ44Q8yFRnBbj58ufNHkV0lfjvs
      Dkr1GhZMrOab+AIeFIOgJE+J3BE1VWV6bZn59CZnB4b4p5ffkz3+PiPnAPvMdi7+dGyV1VyW
      i0PDbz0XX/JypAD2CSEEuVqV6bUVkqUCU5FRToXC8sE/YKQA9oFctcr1lQU2yyXeGRnjdCh8
      qFOSewkpgLeEEIJstcKN1SUy5TLvjI5xKjSA0SAf/MOEFMAes7376qvVJcqNBpeHRznmD8oe
      /5Aiy6PvEe1c/AJfrSyiCZ13RsaIev1y1faQIwXwhuhCsJbPcmNlEcVg5IOxYwz1u+WD3yVI
      AewSXQjWclmuryxiMhr5cPw4Q/0e+eB3GVIAO0QIwXIuw1crS1hNJj6aOMGQ23PQZkl2iZwE
      vyYtXWMhnWI6torHbufdkXH8W6eoSLoXKYDvoKVpPNxMcmd9jYG+Pq6OjOG1O+SDf0SQAngJ
      LV1jNhlnOrbKiNvLu6PjuO32gzZLssdIAXyLptZibiPJ7dgKIx4f747KTShHGSmALVRN4148
      xmwyTtTr4+pIFJe1uw57kOycnhdATW1yLx7j4WaS06EwFwaHD2Ude8nboWcFUG7UubO+xnx6
      k/PhCOcHI1hNJunq9Bi7EkAqsUa+pjMU6CdTahLwuDCbFFQUHFbzoRXAdmm9r1eXWMymORce
      4uLQCFaTXA7pVXYlgJm70wyMHCOf3sRuFORVlZYK585PYhR654Dlw0Sl2eT2+iqLmVSnx5e5
      +JJddX2hgQFWlxdx2m2UmxoWuw2LoqGqGnaLghDiUAhAAPlqldvrKySKRaYiI1wbP35o6uJL
      Dg4hdKrFtd2NAJVSgRYmHFaFakPDYTOjGBVausBiNh24CySEIFOt8NXKEvl6lSvDUY4HgpiM
      ssfvVYQQCF2lmHlEZv0GqbUvUMyOozUJFkKQKpf4cmWRUr3O+9FxjgdCcmLbowihUysnyKx/
      TWb9BpXCCk7PGMHh7xEc+RCL3fcyAejMP/iGx0spfvQPfoRlh8/Pfgtg+ySUGyuLlJsN3hsd
      Z8IXOBRumGT/EEKgNooU07Ok1j6nkHqAoljxDl4hOPoHuDwTKKbnC4y9dA7weO4RweETtHSw
      HFLPQQjBRqnIlysLtDSdqyNRxnyBI18XX9JGCIEQOpX8EunYl2TWb6A2S/T7TxMY/oBjU/8K
      s/XVKeovEYBANGvki2X0t2T8m7Cdi//V6hImReG90XGZi98jCCFo1jJkE9OkY19Sys5jc4YI
      DF/j9Af/BpdnfEftvUQARvo8fWxUalgPkReh6TpL2TS31paxmS18dOwkA64++eAfcVrNCqXs
      PKnYF+SSd0BoeMNXGD715/T5TmKyOHfd9gsEIJiZvkFDceHrs6HrwAG6QEIIdCFYyqb5amUJ
      p8XCD46dItzDJ6EcZYTQEUKnXk6Qid8iHfuCajFGv/8k/sj7jJ75x1gdAQx7VF3jJZPgFv/t
      P/x7ssLDP//Zv6Bvh6sFezUJzlWrfL22xGapxFRkhDMDg7K6whGkWc9R2JwltfYZhdQsitlB
      cOQageFruDzjGN5i+PqFAtBaKplUgnuzS3z8yfcx7WMUqK6qLGZSLOcyFOo1rgxHZVmRI4am
      NShnF8jGb5Jev0FLLeMJXcQ/9A7e8GVMlv077umFffs3d+9gMajkcnnqOrj20QVazmb469lv
      +OnFyzKUeUQQQqDW86TWPie9foNybgFH/zDBkQ85e+3f4ugf2TOXZqe8cARIrM4zv15kbMBL
      eHxiX9cBthPWZEpyd9NqViikH5COfUk2fgvFZMMTvkRo9A/oD5zFaDwcCYj7uhJcLBa5ceMG
      Q0NDTE5OMjMzg8fjodls0mq1cDqdZLNZLly4ICM7XYauqVRLMdKx6+QS01RL63hC5/APvYt3
      8CoWm+fAevlXsa8y7O/v5/Lly6RSKWq1GtVqlUwm89x7LBYLjUYDm03uxjrsqI0S2cQtNlf+
      nlL2MRabl8DINY5f+dc4PWOHppd/FftqoRCChw8fcu3aNTKZDOl0GrPZTKvVQtM0rFYrxWLx
      UO4l6HV0vUVhcwaAbPI26dh1dK2BN3yZweM/ZjL87zAq3ee27qsLJIRAVVXMZjONRqNzres6
      QggURUFVVfr6+vbaJMkOEUKgqVVKuSfkknfIJW+zufo7QqPfZ3Dij/CGp7A5B95qiHI/OFLZ
      oJI3Q2vVKaRmySZukdu4i1ov4ugfxjf0Dt6BS+hanT7fya7s6V/GrgSgaypr8Q3cdjOpUoMB
      Xz9mkxHNaHvlKZGqqvLll18SjUaJRqPcv3+/Mxo8Own+4IMP5CT4LSOEoFnPUkjNkkvcJr85
      g9aq0u8/g2/oCt7wlXYP/8x90HWdJ0+eEI1GsVgsLC8vEw6HWVpawuFwYDabMZvNhEKhA/zP
      dsYuBCCILS+Sr2vYFCMuRZCs1lBVA5cvnYNXnBKp6zrr6+uk02nOnDnDX/3VX3HixAlyuRya
      pmG32ykWi/zkJz+R8f89RugajVqaUnqW/OY9CqkHCCHo85/BO3AJd+gcVkfwlZGaUqnE4uIi
      mqYRDodZXl6m0Whw8uRJ7t+/z/j4OHNzc/zZn/1Z13Rgu5gE61QqVTY2c0QGvMTyKh6/GwVB
      udrE7WznW79oBMjlcvzN3/wNP/7xjymVSvh8PkqlEqqqoqoqJlN7NxmASW5UfyOEENTKcXLJ
      22Tj05Syj1HMDjyh8+1U4Us/w2L37bhNVVW5evUquq4zOztLs9mkVCrxwQcfkE6nsVgsKIrS
      NR3YrucA2x8TQjyndoPB8MpJcKvVQlVVCoUCoVB7t9Z2W9vXcv6wc7RWnWphldzGHbKJaarF
      GBa7D8/ARXzhy7iD5zAqljfqmTOZDNPT05w8eRKn08mjR4+4cuUKtVoNr9fLvXv3cDgcnDhx
      omtGADkJ7kK2IzSV4iq5xDS5jXvUSuvY+4bwhC7gHbiEyzuByeI6aFMPPVIAXUJLrVJMPSCb
      nCaXvEOznsflGcc3eBVP6DxO78RbX3hqNptMT08zNTWFzWZjZWWFoaEhkskkqqp23J6xsbG3
      asdeIh3tQ4gQOs1almLmEbmNu+Q3vkFTq/T5T+IduMTQh3+K3TUIBuO+uhqqqiKE4NGjR5w/
      f57FxUUcDgd/+7d/y+XLl1lfX0dRFKLRaNe4QFIAhwChazTrOfIb35BN3CKfuo/BYKQ/cBpf
      +Aojp3+CzRE88EWnVquFyWR6LmxdrVYZHR1lc3MTo9HYWdSUApC8lO2iTPnNGXLJ25Qy8xhN
      VrwDlwiMXGNi6mdY7f6DNvP3sFgsmEwmBgcHWVtbA9pu0YULFzCbzdRqta6KAIGcA+wLutak
      Ulwjl7xDfuMe5fwiJrMLb/gS/qF36fOfwmSWxy0dBFIAe4wQAl1rUM4tkk1Mk9u4Q60Ux+4K
      4x28gndgCpdn/I02ckv2DimAPaDVrFDMPCS/cY9sYppmPY/TPYJn4BLe8BR93uMH7r9LXowU
      wA5pb+/LUcw8Ihu/SSH9ALVRoM93Cm94Ct9gO4fGqJgP2lTJayAF8B20IzR5cht3ySWmKWYe
      AtDnO4Fv6B3cgUlszpDs4bsUKYBvIXSNWmWDwmY7JFlMP8RosuIOnsM7cAnPwEWsO8yhkRxe
      9k0AmUyGGzducOrUKSYmJvj000+5evUqN2/exGazdfKEPv74432NhmitRjskuXGPbHKaSn4Z
      s82Nd2AKb/gS/YGzMkJzhNm3dYB6vU65XKZUKmE0GhkbG6PRaJDL5Z4TwNtcRGlHaJpU8ktt
      lyZ5m2oxhs0VxhM6T/TsP8HpGcNs7X8r3y85fOybAIQQOJ1OjEYj8XicO3fuEAqFsFqtWK3t
      FOptAewlLbVKKfOYbOIW2eRtmrVse5fT4FWOXfqX+5JDIzm8HLo5QDq2zJ3f/C/e/0f/DJfX
      t6NSGu0cmhyl7CNyG/cobN6n2SjQ5zuBNzyFd+ASdlf4SG3pk7wZu+r6MhvrVDQzwT4L6VKT
      gMeJyaTQEgp265uF/7bdn89/8R/RWi1Gz15k9Oxl+gMDv7fELoSO2iiRS94mt3GH/OYMQmu1
      c2gGrxI58Q+xucKyh5e8lF2NALn0BivxTWwWCw5FUGxpqKrg3OQkRl58SmS5XObzzz9nZGSE
      8fFxPv30UyKRCIlEArfbjdVqJZVK8cd//Medz1byWdbn7xN7+A3VUp7w2AnGzp9Ga22QTUxT
      yjxCF6Ldu4cv4wldwGLz7M0vI+kJdtE1CjRNR2u1ECaFakvHbLVgMmiorZefEulyuQgGgwSD
      QVqtFrqus7y8jBCCQqHA97//fRRFQVGUzijg6O9j5NQYLk+ejaVVMvH/xOK9EbKJMmrDzeSH
      P2P45BQ2l5y0SnbHrjbFlwp5Wphw2UyU6y1cdiuKYmwfp/SSUyLX19e5ceMGFy9eRNd14vE4
      g4OD5HI5LBYLq6urBAIBvve9D0gs/B82V/6eSmEZuzOMN3wZ7+BlXJ4JzNY+WmqTdGyJ2MMZ
      kkuPsNjsjJy5xOjZKRzypBjJDtj3SXC9XkdRFMzmF88VhNDZXPl77K5B+nwnvnOFVQhBIZVg
      9cFd4vOzaFqLoeNnGT17CW94pKtScyX7z6GLAr0JQgiqxTzrj2aIL8xRymwSGB4jeu4KwZFj
      mK3W725EArRL2KRSKXw+HyaTiUwmg8PhQFVVLBYLNpuNSqWCy9Xd+46PlAC+TbNeI7H4kNjD
      b8gmVunzBhk5e4nhUxew2OzSVXoF1WqVe/fuoes677//Pvfv32d1dRVd1zGbzRw/fpw7d+7w
      F3/xFwdt6htxpOODFpud6NkpomenEEIntbbE6uwd5r78FIvNTuTEJCNnLtLnl4dpfxuj0Uiz
      2cThcHTqATkcDgwGA0tLS+RyOfL5fKe+a7dypEeAl6HrOqXsJmtz94jPz9JqNhkYP8no2Sl8
      g8Mopu69oXtFpVLh66+/5ty5c7RaLRYWFohEImSzWcLhMJFIhFQqRTAYPGhT34ieFMC3qZYK
      xOdnWX1wh3IuTWBkgtEzlxg8dgZFVqg70uybACqVCjdu3GBycpJQKMSXX37ZWRMQQmCz2SgU
      Cly5cmWvzdkRutYi/mSOldnbZNZX6PMFGTl9gaGTkzj6emeRTQjBkydPiEQiOBwOkskkRqMR
      s9mM1WrtlLfvpkK4L2Lfujer1dqJLIRCISYmJlhbW+Pu3bscP36cWCxGOBx+4SryfmJUTAyf
      Os/wqfNorRb5jXWW79/i0c3fYbHZGZw40543+IIYu2iU2ym1Wo1ms8ndu3eZmpril7/8Zadq
      t81mY21tDSEEn3zySVfVcRVCoNea1DeyVBbi+yeAQqGAqqrk83ni8Ti/+MUv+MM//EP8fj/F
      YhGfz0e5XH5pZemDQDGZ8Eei+CNRhBCUc2nW5u5y469/jlqvMXj8LMOnzhMaPYbhkNi8V2ia
      Rj6f591336VerzM5OUkqleLKlSuk02lMJhNGo3HPs3f3GiEEzUyR2tomtdVNaqsbbY9jKIAj
      OrB/LpAQ4rlcf13XMRgMz0VfhBBUymVmZ77hxKnTnde22zIan1ZCe/Z6+3WDwdARj8FofGtC
      EkLQajZYm7vH6oM7FNJJAsPjjJy+wMD4Saz27q/4UCqVuH79OkNDQxi3fku3283i4iKtVotj
      x47RaDQ4duzYQZvaQeiCVqlCPZFtP/Brm6jZEmavC/voAPaREPbhIIrT1nl2Dt0keG72Pv/z
      5/+V8WPHYcu07ZLputAR+nZVah1df/51IQS6rrevtyqUARiVZ8XSHvQMxqdiMRqeikVRFDCA
      AUPHxTE+897O5w2GztDfUpvkEquUkit4HVZGjp/CERhCVWy0MGI0GDqTaaNRwai02zKZTO3v
      MRqfivyZwlKdIlOGp+XijUYFZevz7Wul0xZbHYrJpHRsNRgNHXsNPL3eunj6IHyrwrfhW68D
      ZNNp/MHgoRihhRDoDZXGZo7ayga1WIpmpgAGA/ZIEHu0/cCb+x0YLS+P6u2bAGq1GtevX+cH
      P/gBuq7z+eefEwwGiUQiLC0tcfbsWaanp/nggw9oNhpY9/CUSE3TOmLQWi3gebFoWmtba8+L
      qSO8Z977zOe3r3Uh0LRW53WzaFFILLPy4C7x9TjuoSiDx8/iCQ2ha1qnre0AgL51qAjw3Ova
      s+9Vt75L19D0rffqesdGVd22S6fV0jq2PFvGfpvO3xCdTuaFr4v2u9q2aiTj60QnJhgID+L2
      ePD5/Xh9PtweL/1u91tdSxG6jpovU11OUl3ZoB5LgcGA2evCMTqAfSyMNehBsb3+Xo96ubS/
      LtCNGzd49913MRqNTE9PU6lUOn7kdl3Jjz76aK/NOTCEENRKBVbn7rJyf5pmvcbgsTMMnzpH
      YHgck3n/NuZ8123+rtd1XWdxfp5AKESpWCCbyVLI58hmMuRzWcqlEhaLFYfTQb+7LQ6Px4sv
      EMDV58LhcGJ5zVQUIQStQoXGZo7qyga11Q3UYhVzvxP7SBD7SAhHNIzRvrPzDnRdp5LPsP74
      PmsPv6Fe2UcBFAoFfv7zn/Pxxx9js9lYWFjoVBteX19nfHycxcVF/vIv/7KrogqvixCCRrXC
      xvJjlmdukd+M449EGTl9ifDESSw2R1evRuu6TqPRoF6rUcjnyWbS5HM5ctkMpWKRaqUCGOjr
      78Pt8eLxevH6fPj8fgIeP1q+0nFlGsksit2KNext++6RIGavC6N5Z8/F9lwtHVsi9vg+G8vz
      WKw2BreSJfv9of2fA1QqFVRVxePpnZj6i2ipKunYEiuz0yQXH+Ho9xKdvEzk5CRO99Esu9Jo
      NCgVCqSfrBCfeUxhfhWPwUrQG6BAk4VcnLrTROjEGIHI4JZI/PS73bj6+l67gyjn0qw/niX2
      eIZKPktgeIzIiUnCE6exOp4PUOxKAPVqmZoqcNlMVBoaTrul7cIIA2aT0nUrwQeNrusU0xus
      PrjN2tw9DAYjI2cuEjl5Dk9o6EDWG8rlMtevX2d4eJiTJ0/yd3/3d4RCIbLZLGazGbfbzebm
      Jj/60Y9eOikWuk6rXKO+nqa62o7KaNU6isOGIzqwFZkJotgsCNrzn2KxSD6XJZfJks2kKRTy
      5LM5arUaNpsVm92Ox+vD5w/g8Xrw+QM4HXbK6QTxhTkSCw+x2h2Ej51m9Mylra20L//9diWA
      THqT9cQGFpMCLQ2D3YZotYhOnMRmNr5QAJqmMTc3x+TkJAC3bt0iEolQKpWw2+2oqkqlUuHC
      hQs7NedIIXS9ndI9f5/VB3epFvMMHW8vvgUi4yj7lHgmhODTTz/F5/N16v9ns1mSySQmk4mp
      qSlu3LjBT3/607YAtqIyzUyRylKC+lqK+kYWxWHFGvJijw7gGAlhcjt37MrAlotVr1OtVsll
      0qwtzvP49leoxRShYIBKQyVb1fBFxggNDbfdq0AAz5a7ZTKbn9ttuM2unO1GrUJkZIzMRhy7
      TaHQbKCqYFKeHpCwHb3YRlVVkskkp06dQlVVFhYWKBQKHYMuXbrEkydPOHv27KEIsx0k9n4P
      x698yPErH9KsV0mtPOHJ9Jd8+av/gndwhOjkZcITp97qekMul0NVVQwGA/V6nfn5eQYGBjpn
      BMTWYpgqKtlbD2nE0tTWUxgxYA24sUfD+K5NYh7wvvBh//az8Tq0mg1yidVOiorJpHDtoz9g
      cOIUnoFhMBhoNhqUSiWKhQL5bIa15WW+yd6mUMijNlUMBnC6XPgDQXyBAIFAcHcjQGz5CSXV
      yOiAl0y5ScDjwmI20WiB02594QhQr9f59a9/zUcffYSmaUxPT6MobXfJZDJRq9U4c+YMp0+f
      7urJ4NtCCIHWbJKJr7A2d4/YwxlcHj+jk1MMnziH1eECITrrJGwtPAKgPxPu3H74xDPXukDX
      tq91xNa10HSE2LputCg9XEFx2KjH06j5MhZfH7ZIsO3KDPnbC0x71HnputYuivB4lsTiHMX0
      BoHhcSInJhk8dgaL/fWDBp1Qc6tFsVAgk06Ty2ZIbW7u3yS40WgQj8fp7+/HbrdTKBTo7+/v
      nA9cKpXaBzB7/VSerOM6Ndo2vqVth6IR2/F8AWI7Hq+L524YWzdVb2lPb3rraWy/c63p7Qdj
      u93t61ar83361ncL/Wm74pkHhGe+W9+KwyOe/g3Rbrtj5zMP3Pb19uu/Z+ez37Fl2/aiVrtp
      QaNaBsBktdGsVWi1VIwmhT5vEKPJBM8sgrG94LW1sNa5BjAaMChPV9A714oRnllZLz9ew3ft
      PK4TEcyenUdlXkX75MsmqbXFrYf+YTv36tiZrbnQ4FtJUz90K8GFbxZY+8//F0c0DIDBpDy9
      eaanK7oG89MV2e0bhqI8Xfk0PfX32m0AGDCat+wyGNp/Z+umG59vF8C4/blvv1d55sHZXk3e
      /tyz9hjAsJ2mYTQ88zA9/dx2u9v/X6eNrYmbQTG8Vq9aKeRIPHnA6oM7lLJpQmPHGTt3leDo
      MUy7mDdUKhU+//xzwuEwFy9eZHZ2lkqlgqZpDAwMdHK6/uRP/mTX93o7vyqx8JC1h/co5zIE
      IlEiJ88xeOx0e1R7y+ybAFRV5YsvvmBqaoq+vj6uX79OJBIhmUxis9mwWCxUq6v5BGEAAAZ4
      SURBVFWuTF2mVa5i6pcFaXdD+/yCGhsr86zN3WNzdQFPaJDo5BXCE6ewv2YJGU3TuH37NsPD
      w7jdbn7961/jdru5evUqmUwGp9NJMpnkypUrO7pPaqNOOrbM+uMZksvzmK02wuOnGD1zkf5g
      uJNqsl/smwBmZ2fxeDysrKxw+fJlfvWrXzEwMEAsFuPDDz/E7/dz8+ZNfvjDH/b8JHgvaalN
      svFV1h5+Q3LxESazhZGzlxg9ewlHv/elv3UymeTzzz/nwoULndMhc7kc5XKZSqWCwWDA7XZz
      7dq1V44AQtepFLLEF+aIzbULnLmDg4yenSI4Mo6j/2DXg/ZNACsrK8zMzDA4OIjf7+fWrVvY
      7XYCgQCrq6vUajVOnz7N1atXpQDeEkIICpsJ1p/MEns0Q7NaYfjUeUbOXMI3NPrC373RaHQ2
      wrwurWaD9PoKqw/ukI4tAQZGzlxk8Nhp/IOjhyp1fF9zgWq1GpqmUa1W6evrw2w2dybB29Xi
      nE7p+uwHQgjq5SLr87OsP5ohn0oQHJlg9OwUoehxLDb7a7fVzrHJEn8yS+LJXKetwWNniJw4
      i8V+eO/poZsESw6GZr3GxvI8sUffkFpdxOUNMLpVQsbqeP4B3s6ETa0+YX3+AYmFOSw2B+Hx
      kwyfvoAnOLhvC3ZvihSA5PcQur4VjrxPfGEOo1Fh5MxFzNb2RpK1h99QyWfxDQ4zfOoC4YnT
      2JzdWSBLCkDySoSuU8qlWZ65yb1P/zdnvvcJExffwx0MH4nyMVIAktdCCEGjUsbqdB1af343
      HL3Ee8me0Gw2+eqrr7h27RoGg6FznkM2m8VqtWI2m6lUKrz//vtdLYjDE4+SHCpMJhMGg6Fz
      eGE8Hsdms7G6uordbqevr49EInHoq0J8F3IEkLyQSqXCnTt38Hq9eDwehoaGmJ2dZWhoiJmZ
      GaLRKNVq9cDrOL0pcg4g6Wm6V7oSyR6wKxfoVYNGN0+IJM8zMzNDKBQiEAjw2Wef4Xa7qVQq
      mEwmrFYr1WqV733ve119z3clgHRihWzdiNIoki838Pg9KEInMBSlzy7P4D0KlEol4vE4VquV
      UCjEiRMn2NzcZGNjA5PJRCAQwGw202w2OweddyO7EoA/NEg5nkLTbAz7rSSrFZpNGB03o2na
      c4WoJN1JsVikWCwSi8UwGAz85je/4b333uuUsikUCjQaDaampmhtbU7qRna9JTJdbDIc9pIt
      q4T9/VjMJlTM9DlevCVS0p1Uq1WazeaRLWMjo0CSnkZGgSQ9jRSApKeRApD0NFIAkp5GCkDS
      00gBSHoaKQBJTyMFIOlppAAkPY0UgKSnkQKQ9DRSAJKe5o32BFeLWdIllYDHicmk0BIKjh2c
      0yqRHDRvJID1RBqbUbBQ2ERVDVw4P7lXdkkk+8KbuUCiRanWxGqx4bSZaKjduzFC0pu80X6A
      VrNOtalht1pQFCOaLjCbTHI/gKRr2NMNMduHkQkhXrpR+nXqyHzXe77r9e1/6VWbtbuljdd5
      z2FpA3jr936v78tb2RH2Kl71A23zXSPId7XxOj9St7Txut+zF218l62vc19e1cZ+2bmTNvZd
      ABLJYeJQlEYs5TPUdRN9NiOluo6/306x0sDd5yARjxMYHMaidG/tmW5l+77024wU6xr+fifF
      Sh1FNEnnigTDEVxdXgbnUAigpQs2EnGyCihCYFQipDdSVDItVlMl+gNDWOSket9p6bCZWCer
      GFGEjkGJkNlIcWx8FHM2Q3PnB74fOg7FSnA+myEyGsWAAaPRgN3pwohAbQlOHI+QSGYP2sSe
      pJBNMzQSxQAoz9wXo9FIAwteR3f3/nBIRgCz2UQ2m2VkeJBCTaORSyEQBIbHyaQ2mYgOHrSJ
      PYnZbH7uvjTzaQSCSkMlEonQxRURO8hJsKSnORQukERyUEgBSHoaKQBJV1IrpEgXa6yvr3/n
      e2PzD3i0mkStV5i++TWpfKXzmpwDSLoS0arzy//x3xmdfJdicgmnL4ydBmVgbXaZP/rJnzN/
      9zr5GuQSS0x9/KcU5u8x9u6HTH/2/+ingcHllyOApDsxmGyEAyFOnhhmbnaWSqnI19N3iMXi
      +EIj+PusVKt19EaFvkCEsdEwbreTxcePMdmcTAyHqZRLcgSQdC/NZgOT2UK9WsagWGg1G1hs
      VhAGrFYLaqNOUwOzYsBstYLQKRWLOFz9GISGrmlSAJLe5v8Dd/eYzPqHUcMAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='164' name='Pie Chart' width='192'>
      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
      vPb/67dKtxr3skQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Vertical Bars' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
